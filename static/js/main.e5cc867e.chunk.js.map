{"version":3,"sources":["actions/slidebar.ts","components/another/Sidebar/Sidebar.styled.ts","components/another/Sidebar/Sidebar.tsx","components/another/Introduce/Introduce.styled.ts","components/another/Introduce/Introduce.tsx","pages/Home.tsx","components/another/Content/Content.styled.ts","components/another/Content/Content.tsx","Router.tsx","common/store.ts","reducers/slidebar.ts","App.tsx","index.tsx"],"names":["SLIDE_OPEN","SLIDE_CLOSE","SidebarContainer","styled","aside","props","show","CloseBtn","span","ImageWrapper","div","ComponentsList","CopyRight","Sidebar","dispatch","useDispatch","isOpen","useSelector","state","slidebar","onClick","type","payload","to","src","process","alt","className","IntroduceContainer","ImageWarpper","IntroduceComment","article","Introduce","href","target","rel","Home","ContentContainer","MenuBtn","hidden","Content","children","AppRouter","basename","exact","path","rootReducer","combineReducers","action","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5cc867e.chunk.js","sourcesContent":["export interface SlideAction {\n  type: string;\n  payload: boolean;\n}\n\nexport const SLIDE_OPEN = 'SLIDE_OPEN' as const;\nexport const SLIDE_CLOSE = 'SLIDE_CLOSE' as const;\n\nexport const slideOpen = (): SlideAction => ({\n  type: SLIDE_OPEN,\n  payload: true,\n});\n\nexport const slideClose = (): SlideAction => ({\n  type: SLIDE_CLOSE,\n  payload: false,\n});\n","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.aside<{ show?: boolean }>`\n  width: 300px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #e6e6e6;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  overflow: scroll;\n  z-index: 10;\n  transition: all 0.7s ease-in-out;\n\n  @media screen and (max-width: 769px) {\n    margin-left: ${props => (props.show ? '0px' : '-300px')};\n  }\n`;\n\nexport const CloseBtn = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: none;\n  font-size: 1.5rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: inline;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  padding: 30px 0;\n  text-align: center;\n\n  img {\n    width: 70%;\n  }\n`;\n\nexport const ComponentsList = styled.div`\n  ul {\n    padding: 20px;\n  }\n\n  ul .subtitle {\n    margin-bottom: 7px;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: #4284bd;\n  }\n\n  ul li {\n    margin-left: 20px;\n    padding: 5px 0;\n  }\n\n  ul a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  ul a:hover {\n    color: #499cd3;\n  }\n`;\n\nexport const CopyRight = styled.div`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 0.7rem;\n  color: #a6a6a6;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'common/store';\nimport { slideClose } from 'actions/slidebar';\nimport { SidebarContainer, CloseBtn, ImageWrapper, ComponentsList, CopyRight } from './Sidebar.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst Sidebar: React.FC = () => {\n  const dispatch = useDispatch();\n  const isOpen: boolean = useSelector((state: RootState) => state.slidebar);\n\n  const closeSlideMenu = () => {\n    dispatch(slideClose());\n  };\n\n  return (\n    <SidebarContainer show={isOpen}>\n      <CloseBtn>\n        <AiOutlineClose onClick={closeSlideMenu} />\n      </CloseBtn>\n      <ImageWrapper>\n        <Link to=\"/\">\n          <img src={process.env.PUBLIC_URL + '/asset/logo.png'} alt=\"logo\" />\n        </Link>\n      </ImageWrapper>\n      <ComponentsList>\n        <ul>\n          <h1 className=\"subtitle\">atoms</h1>\n          <li>\n            <Link to=\"/atoms/button\">button</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/input\">input</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/header\">header</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/checkbox\">checkbox</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/hr\">hr</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/link-button\">linkButton</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/underline\">underline</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/icon\">icon</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/deco-hr\">decoHr</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">molecules</h1>\n          <li>\n            <Link to=\"/molecules/subtitle\">subtitle</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/dropdown\">dropdown</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/card\">card</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/event-info-card\">eventInfoCard</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/step-card\">stepCard</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">organisms</h1>\n          <li>\n            <Link to=\"/organisms/navigation-bar\">navigationBar</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/footer\">footer</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/hamberg-tab\">hambergTab</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/slider\">slider</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/n-step\">Nstep</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/banner\">banner</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/modal\">modal</Link>\n          </li>\n          <br />\n        </ul>\n      </ComponentsList>\n      <CopyRight>copyright &copy; All Right Reserved by 수시레시피</CopyRight>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const IntroduceContainer = styled.div`\n  padding: 50px;\n`;\n\nexport const ImageWarpper = styled.div`\n  margin: 30px 0;\n  text-align: center;\n  img {\n    width: 300px;\n  }\n`;\n\nexport const IntroduceComment = styled.article`\n  text-align: left;\n\n  h1 {\n    line-height: 1.4;\n    font-size: 2rem;\n    color: #374553;\n  }\n\n  h2 {\n    font-weight: 600;\n    font-size: 1.5rem;\n    color: #499cd3;\n  }\n\n  p {\n    line-height: 1.5;\n    color: #374553;\n  }\n  \n  a {\n    color: #9a9a9a;\n  }\n\n  a:hover {\n    font-weight: 600;\n  }\n`;\n","import React from 'react';\nimport { IntroduceContainer, ImageWarpper, IntroduceComment } from './Introduce.styled';\n\nconst Introduce: React.FC = () => {\n  return (\n    <IntroduceContainer>\n      <ImageWarpper>\n        <img src={process.env.PUBLIC_URL + '/asset/logo2.png'} alt=\"logo\" />\n      </ImageWarpper>\n      <IntroduceComment>\n        <h1>안녕하세요 디자이너팀과 개발팀을 위한</h1>\n        <h1>수시레시피 디자인 시스템 문서입니다</h1>\n        <br />\n        <br />\n        <p>저희는 가장 합리적인 업무 체계를 위하여 고민했고, 디자어너와 개발자가 가장 효율적인</p>\n        <p>업무를 할 수 있는 시스템을 찾았습니다.</p>\n        <p>바로 'atomic design' 입니다. 저희는 리액트로 개발하기에 재사용 가능한 컴포넌트를 활용하고자 했고</p>\n        <p>여러 원자로 나누어서 그것들을 합쳐가며 디자인을 하기로 했습니다.</p>\n        <p>참고 - <a href=\"https://velog.io/@thsoon/쓸때없이-고퀄인-투두리스트-만들기-FE-2.-뷰-설계\" target=\"_blank\" rel=\"noreferrer\">Todo List로 atomic design 배우기</a></p>\n        <p>참고 - <a href=\"https://tech.socarcorp.kr/design/2020/07/31/component-01.html\" target=\"_blank\" rel=\"noreferrer\">SOCAR 컴포넌트 디자인 방식</a></p>\n        <br />\n        <br />\n        <h2>atoms</h2>\n        <br />\n        <p>atoms는 원자입니다. 디자인 시스템의 가장 기초가되는 컴포넌트라고 할 수 있습니다. </p>\n        <p>atoms에는 개발 단계에서 가장 기초가되는 HTML Tag를 기준으로 합니다. 보통 예를 들면 'input tag', 'button tag'를 예로 들 수 있겠죠?</p>\n        <p>이런 atom들을 가지고 미리 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>디자이너들은 다양한 종류의 컴포넌트 디자인을, 개발자는 컴포넌트가 가지능 기능, 즉 React에서는 Props같은 것 들을 설계할 수 있습니다.</p>\n        <p>다양하게 만들어진 atoms를 가지고 우리는 좀 더 큰 단위인 molecules(분자)를 만들겁니다.</p>\n        <br />\n        <br />\n        <h2>molecules</h2>\n        <br />\n        <p>분자는 원자들이 결합한 결과물로 나타납니다. 우리는 React를 쓰기 때문에 다양한 원자들을 결합시킨 분자를 컴포넌트화 시킬 수 있습니다.</p>\n        <p>분자 또한 마찬가지로 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>최대한 기존의 설계된 원자를 재사용하는 것을 목표로 하고 필요에 의해 새로 만들기도 합니다.</p>\n        <p>당연한 이야기지만 분자들을 합쳐 페이지 템플릿의 주축이 될 organisms(유기체)를 만듭니다.</p>\n        <br />\n        <br />\n        <h2>organisms</h2>\n        <br />\n        <p>컴포넌트 단위의 최종 결정물인 유기체입니다.</p>\n        <p>이 컴포넌트들을 간단한 예로 들면 웹의 header나 footer, hambergbar, article등 페이지 템플릿에 직접적으로 들어간 요소들 입니다.</p>\n        <p>우리는 설계를 하면서 페이지에 들어갈 모든 유기체를 만드는 것은 불가능하다고 생각했습니다.</p>\n        <p>하지만 자주쓰이는 header나 footer같은 경우는 재사용될 가능성이 크기 때문에 이러한 컴포넌트는 미리 설계를 해놓기로 했습니다.</p>\n        <p>물론 기능이 많이 들어가는 컴포넌트도 로직의 분리를 위해서 미리 설계해놓았습니다.</p>\n        <br />\n        <br />\n      </IntroduceComment>\n    </IntroduceContainer>\n  );\n};\n\nexport default Introduce;\n","import React from 'react';\nimport Introduce from 'components/another/Introduce/Introduce';\n\nconst Home:React.FC = () => {\n  return <Introduce />\n}\n\nexport default Home;","import styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  width: calc(100vw - 300px);\n  margin-left: 300px;\n\n  @media screen and (max-width: 769px) {\n    width: 100%;\n    margin-left: 0;\n  }\n`;\n\nexport const MenuBtn = styled.span<{ hidden?: boolean }>`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: none;\n  font-size: 2.7rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: ${props => props.hidden ? 'none' : 'inline'};\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { slideOpen } from 'actions/slidebar';\nimport { RootState } from 'common/store';\nimport { ContentContainer, MenuBtn } from './Content.styled';\nimport { BiMenu } from 'react-icons/bi';\n\nconst Content: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n  const isOpen: boolean = useSelector((state: RootState) => state.slidebar);\n\n  const openSlideMenu = () => {\n    dispatch(slideOpen());\n  };\n\n  return (\n    <ContentContainer>\n      <MenuBtn hidden={isOpen}>\n        <BiMenu onClick={openSlideMenu} />\n      </MenuBtn>\n      {children}\n    </ContentContainer>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Sidebar from 'components/another/Sidebar/Sidebar';\nimport Home from 'pages/Home';\nimport Content from 'components/another/Content/Content';\n\nconst AppRouter: React.FC = () => (\n  <Router basename='/susirecipe-design-system'>\n    <Sidebar />\n    <Content>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Content>\n  </Router>\n);\n\nexport default AppRouter;","import { createStore, combineReducers } from 'redux';\nimport { slideReducer } from 'reducers/slidebar';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  slidebar: slideReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { SLIDE_OPEN, SLIDE_CLOSE, SlideAction } from 'actions/slidebar';\n\nconst initialState: boolean = false;\n\nexport const slideReducer = (state = initialState, action: SlideAction): boolean => {\n  switch (action.type) {\n    case SLIDE_OPEN:\n      return true;\n    case SLIDE_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport AppRouter from 'Router';\nimport { Provider } from 'react-redux';\nimport store from 'common/store';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}