{"version":3,"sources":["common/ScrollToTop.tsx","actions/slidebar.ts","components/another/Sidebar/Sidebar.styled.ts","components/another/Sidebar/Sidebar.tsx","components/another/HomeIntroduce/HomeIntroduce.styled.ts","components/another/HomeIntroduce/HomeIntroduce.tsx","pages/Home.tsx","templates/ComponentTemplate.styled.ts","templates/ComponentTemplate.tsx","components/another/Intro/global-intro.styled.ts","components/atoms/Button/Button.styled.ts","components/atoms/Button/Button.tsx","components/another/Intro/ButtonIntro.tsx","pages/Button.tsx","components/atoms/Input/Input.styled.ts","components/atoms/Input/Input.tsx","components/another/Intro/InputIntro.tsx","pages/Input.tsx","components/atoms/Checkbox/Checkbox.styled.ts","components/atoms/Checkbox/Checkbox.tsx","components/another/Intro/CheckboxIntro.tsx","pages/Checkbox.tsx","pages/DecoHr.tsx","components/atoms/Header/Header.styled.ts","components/atoms/Header/Header.tsx","components/another/Intro/HeaderIntro.tsx","pages/Header.tsx","components/atoms/Hr/Hr.styled.ts","components/atoms/Hr/Hr.tsx","components/another/Intro/HrIntro.tsx","pages/Hr.tsx","components/atoms/Icon/Icon.styled.ts","components/atoms/Icon/Icon.tsx","components/another/Intro/IconIntro.tsx","pages/Icon.tsx","components/atoms/LinkButton/LinkButton.styled.ts","components/atoms/LinkButton/LinkButton.tsx","components/another/Intro/LinkButtonIntro.tsx","pages/LinkButton.tsx","components/atoms/Underline/Underline.styled.ts","components/atoms/Underline/Underline.tsx","components/another/Intro/UnderlineIntro.tsx","pages/Underline.tsx","components/molecules/Subtitle/Subtitle.styled.ts","components/molecules/Subtitle/Subtitle.tsx","components/another/NotSupport/NotSupport.styled.ts","components/another/NotSupport/NotSupport.tsx","components/another/Intro/SubtitleIntro.tsx","pages/Subtitle.tsx","actions/dropdown.ts","components/molecules/Dropdown/Dropdown.styled.ts","components/molecules/Dropdown/Dropdown.tsx","components/another/Intro/DropdownIntro.tsx","pages/Dropdown.tsx","components/molecules/Card/Card.styled.ts","components/molecules/Card/Card.tsx","components/another/Intro/CardIntro.tsx","pages/Card.tsx","components/molecules/EventInfoCard/EventInfoCard.styled.ts","components/molecules/EventInfoCard/EventInfoCard.tsx","components/another/Intro/EventInfoCardIntro.tsx","pages/EventInfoCard.tsx","components/molecules/StepCard/StepCard.styled.ts","components/molecules/StepCard/StepCard.tsx","components/another/Intro/StepCardIntro.tsx","pages/StepCard.tsx","components/organisms/NavigationBar/NavigationBar.styled.ts","components/organisms/NavigationBar/NavigationBar.tsx","components/another/Intro/NavigationBarIntro.tsx","pages/NavigationBar.tsx","components/organisms/Footer/Footer.styled.ts","components/organisms/Footer/Footer.tsx","components/another/Intro/FooterIntro.tsx","pages/Footer.tsx","components/organisms/HambergTab/HambergTab.styled.ts","components/organisms/HambergTab/HambergTab.tsx","components/another/Intro/HambergTabIntro.tsx","pages/HambergTab.tsx","components/organisms/Slider/Slider.styled.ts","components/organisms/Slider/Slider.tsx","components/another/Intro/SliderIntro.tsx","pages/Slider.tsx","pages/Nstep.tsx","components/organisms/Banner/Banner.styled.ts","components/organisms/Banner/Banner.tsx","components/another/Intro/BannerIntro.tsx","pages/Banner.tsx","actions/modal.ts","components/organisms/Modal/Modal.styled.ts","components/organisms/Modal/Modal.tsx","components/another/Intro/ModalIntro.tsx","pages/Modal.tsx","components/another/Content/Content.styled.ts","components/another/Content/Content.tsx","Router.tsx","common/store.ts","reducers/slidebar.ts","reducers/dropdown.ts","reducers/modal.ts","App.tsx","index.tsx"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","SLIDE_OPEN","SLIDE_CLOSE","SidebarContainer","styled","aside","props","show","CloseBtn","span","ImageWrapper","div","ComponentsList","CopyRight","Sidebar","dispatch","useDispatch","isOpen","useSelector","state","slidebar","closeSlideMenu","type","payload","onClick","to","src","process","alt","className","IntroduceContainer","ImageWarpper","IntroduceComment","article","HomeIntroduce","href","target","rel","queryString","require","Home","location","history","useHistory","search","query","parse","replace","page","ComponentTemplateContainer","ComponentHeader","h1","ComponentTemplate","header","content","IntroContainer","IntroSmallHeader","h2","IntroParagraph","p","ComponentWrapper","blackBG","css","ControlBox","direction","PropsTable","table","MarginBox","margin","CodeBox","ListBox","ul","StyledButton","button","width","height","disabled","isLoading","Button","children","ButtonIntro","useState","inputs","setInputs","handleInput","event","value","name","alert","min","max","step","onChange","placeholder","readOnlyCss","InputDefault","input","StyledWhiteInput","readOnly","StyledBlackInput","TextInput","black","EmailInput","PasswordInput","NumberInput","InputIntro","textWhiteInput","textBlackInput","overviewInput","setOverviewInput","handleOverviewInput","hndleFakeInput","Inupt","StyledCheckbox","imgUrl","Checkbox","checked","id","imageUrl","htmlFor","CheckboxIntro","check1","check2","checks","setChecks","handleChecked","DecoHr","HeaderDefulat","color","StyledLargeHeader","StyledSmallHeader","LargeHeader","_color","SmallHeader","HeaderIntro","initialBtnActive","white","brand","point","btnActive","setBtnActive","btnColor","setBtnColor","handleHeaderColor","currentTarget","Header","StyledHr","hr","Hr","HrIntro","StyledIcon","img","Icon","linked","IconIntro","StyledLinkButton","LinkButton","active","undefined","LinkButtonIntro","params","useParams","getCurrentActivePageObj","useCallback","initActivePages","page1","page2","page3","page4","Object","keys","length","getCurrentPage","activePages","setActivePages","currentPage","setCurrentPage","handleActivePage","StyledUnderline","Underline","UnderlineIntro","setInput","StyledSubtitle","Subtitle","StyledWrapper","NotSupport","SubtitleIntro","innerWidth","style","position","SHOW_DROPDOWN","HIDDEN_DROPDOWN","showDropdown","hiddenDropdown","StyledDropdown","leftPos","Dropdown","menu","onMouseEnter","onMouseLeave","isShow","dropdown","map","menuItem","idx","link","DropdownIntro","defaultMenus","useMemo","startPos","menus","setMenus","parseInt","onSubmit","preventDefault","newMenu","textAlign","StyledCard","StyledCardHeader","headerColor","StyledCardContent","Card","StyledSampleContent","CardIntro","sampleJSX","hadnleInput","StyledEventInfoCard","StyledInfoRow","StyledInfoTab","StyledInfoContent","EventInfoCard","rows","row","tab","EventInfoCardIntro","eventRows","setEventRows","evnet","newRow","required","StyledStepCard","StyledStepCardHeader","StyledStepCardContent","StepCard","StepCardIntro","StyledNavivagtionBar","ImageBox","StyledLinkBox","LinkWrapper","isHover","NavigationBar","logoImgSrc","currentMenu","setCurrentMenu","activeTab","setActiveTab","dropdownPos","setDropdownPos","submenu","setSubmenu","handleHoverOn","isSubmenuEmpty","forEach","pos","handleHoverOut","NavigationBarIntro","StyledFooter","StyledFooterInfo","StyledImageWrapper","StyledFooterLink","Footer","FooterIntro","StyledHamberTab","StyledMainMenu","HanberTab","item","subitem","HamberTabIntro","HambergTab","StyledSlider","StyledPrevButton","StyledNextButton","PrevButton","NextButton","Slider","slidesToShow","autoplay","settings","dots","infinite","speed","autoplaySpeed","slidesToScroll","prevArrow","nextArrow","SliderIntro","slideNum","Nstep","StyledBanner","section","StyledDescriptionBox","StyledSubmitBox","form","Banner","description","phone","private","BannerIntro","MODAL_OPEN","MODAL_CLOSE","StyledModal","StyledModalContentBox","StyledModalBlackLayout","Modal","modal","handleModal","StyledSampleJSX","ModalIntro","ContentContainer","MenuBtn","hidden","Content","AppRouter","basename","exact","path","Input","rootReducer","combineReducers","action","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7741cbc2.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop: React.FC = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","export const SLIDE_OPEN = 'SLIDE_OPEN';\nexport const SLIDE_CLOSE = 'SLIDE_CLOSE';\n\nexport const slideOpen = (): DefaultAction => ({\n  type: SLIDE_OPEN,\n  payload: true,\n});\n\nexport const slideClose = (): DefaultAction => ({\n  type: SLIDE_CLOSE,\n  payload: false,\n});\n","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.aside<{ show?: boolean }>`\n  width: 300px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #e6e6e6;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  overflow: scroll;\n  z-index: 10;\n  transition: all 0.7s ease-in-out;\n\n  @media screen and (max-width: 769px) {\n    margin-left: ${props => (props.show ? '0px' : '-300px')};\n  }\n`;\n\nexport const CloseBtn = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: none;\n  font-size: 1.5rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: inline;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  padding: 30px 0;\n  text-align: center;\n\n  img {\n    width: 70%;\n  }\n`;\n\nexport const ComponentsList = styled.div`\n  ul {\n    padding: 20px;\n  }\n\n  ul .subtitle {\n    margin-bottom: 7px;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: #4284bd;\n  }\n\n  ul li {\n    margin-left: 20px;\n    padding: 5px 0;\n  }\n\n  ul a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  ul a:hover {\n    color: #499cd3;\n  }\n`;\n\nexport const CopyRight = styled.div`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 0.7rem;\n  color: #a6a6a6;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'common/store';\nimport { slideClose } from 'actions/slidebar';\nimport { SidebarContainer, CloseBtn, ImageWrapper, ComponentsList, CopyRight } from './Sidebar.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst Sidebar: React.FC = () => {\n  const dispatch = useDispatch();\n  const isOpen: boolean = useSelector((state: RootState) => state.slidebar);\n\n  const closeSlideMenu = () => {\n    dispatch(slideClose());\n  };\n\n  return (\n    <SidebarContainer show={isOpen}>\n      <CloseBtn>\n        <AiOutlineClose onClick={closeSlideMenu} />\n      </CloseBtn>\n      <ImageWrapper>\n        <Link to=\"/\" onClick={closeSlideMenu}>\n          <img src={process.env.PUBLIC_URL + '/asset/logo.png'} alt=\"logo\" />\n        </Link>\n      </ImageWrapper>\n      <ComponentsList>\n        <ul>\n          <h1 className=\"subtitle\">atoms</h1>\n          <li>\n            <Link to=\"/atoms/button\" onClick={closeSlideMenu}>button</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/input\" onClick={closeSlideMenu}>input</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/header\" onClick={closeSlideMenu}>header</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/checkbox\" onClick={closeSlideMenu}>checkbox</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/hr\" onClick={closeSlideMenu}>hr</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/link-button\" onClick={closeSlideMenu}>linkButton</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/underline\" onClick={closeSlideMenu}>underline</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/icon\" onClick={closeSlideMenu}>icon</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/deco-hr\" onClick={closeSlideMenu}>decoHr</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">molecules</h1>\n          <li>\n            <Link to=\"/molecules/subtitle\" onClick={closeSlideMenu}>subtitle</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/dropdown\" onClick={closeSlideMenu}>dropdown</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/card\" onClick={closeSlideMenu}>card</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/event-info-card\" onClick={closeSlideMenu}>eventInfoCard</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/step-card\" onClick={closeSlideMenu}>stepCard</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">organisms</h1>\n          <li>\n            <Link to=\"/organisms/navigation-bar\" onClick={closeSlideMenu}>navigationBar</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/footer\" onClick={closeSlideMenu}>footer</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/hamberg-tab\" onClick={closeSlideMenu}>hambergTab</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/slider\" onClick={closeSlideMenu}>slider</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/n-step\" onClick={closeSlideMenu}>Nstep</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/banner\" onClick={closeSlideMenu}>banner</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/modal\" onClick={closeSlideMenu}>modal</Link>\n          </li>\n          <br />\n        </ul>\n      </ComponentsList>\n      <CopyRight>copyright &copy; All Right Reserved by 수시레시피</CopyRight>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const IntroduceContainer = styled.div`\n  padding: 50px;\n`;\n\nexport const ImageWarpper = styled.div`\n  margin: 30px 0;\n  text-align: center;\n  img {\n    width: 300px;\n  }\n`;\n\nexport const IntroduceComment = styled.article`\n  text-align: left;\n\n  h1 {\n    line-height: 1.4;\n    font-size: 2rem;\n    color: #374553;\n  }\n\n  h2 {\n    font-weight: 600;\n    font-size: 1.5rem;\n    color: #499cd3;\n  }\n\n  p {\n    line-height: 1.5;\n    color: #374553;\n  }\n  \n  a {\n    color: #9a9a9a;\n  }\n\n  a:hover {\n    font-weight: 600;\n  }\n`;\n","import React from 'react';\nimport { IntroduceContainer, ImageWarpper, IntroduceComment } from './HomeIntroduce.styled';\n\nconst HomeIntroduce: React.FC = () => {\n  return (\n    <IntroduceContainer>\n      <ImageWarpper>\n        <img src={process.env.PUBLIC_URL + '/asset/logo2.png'} alt=\"logo\" />\n      </ImageWarpper>\n      <IntroduceComment>\n        <h1>안녕하세요 디자이너팀과 개발팀을 위한</h1>\n        <h1>수시레시피 디자인 시스템 문서입니다</h1>\n        <br />\n        <br />\n        <p>저희는 가장 합리적인 업무 체계를 위하여 고민했고, 디자어너와 개발자가 가장 효율적인</p>\n        <p>업무를 할 수 있는 시스템을 찾았습니다.</p>\n        <p>바로 'atomic design' 입니다. 저희는 리액트로 개발하기에 재사용 가능한 컴포넌트를 활용하고자 했고</p>\n        <p>여러 원자로 나누어서 그것들을 합쳐가며 디자인을 하기로 했습니다.</p>\n        <p>참고 - <a href=\"https://velog.io/@thsoon/쓸때없이-고퀄인-투두리스트-만들기-FE-2.-뷰-설계\" target=\"_blank\" rel=\"noreferrer\">Todo List로 atomic design 배우기</a></p>\n        <p>참고 - <a href=\"https://tech.socarcorp.kr/design/2020/07/31/component-01.html\" target=\"_blank\" rel=\"noreferrer\">SOCAR 컴포넌트 디자인 방식</a></p>\n        <br />\n        <br />\n        <h2>atoms</h2>\n        <br />\n        <p>atoms는 원자입니다. 디자인 시스템의 가장 기초가되는 컴포넌트라고 할 수 있습니다. </p>\n        <p>atoms에는 개발 단계에서 가장 기초가되는 HTML Tag를 기준으로 합니다. 보통 예를 들면 'input tag', 'button tag'를 예로 들 수 있겠죠?</p>\n        <p>이런 atom들을 가지고 미리 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>디자이너들은 다양한 종류의 컴포넌트 디자인을, 개발자는 컴포넌트가 가지능 기능, 즉 React에서는 Props같은 것 들을 설계할 수 있습니다.</p>\n        <p>다양하게 만들어진 atoms를 가지고 우리는 좀 더 큰 단위인 molecules(분자)를 만들겁니다.</p>\n        <br />\n        <br />\n        <h2>molecules</h2>\n        <br />\n        <p>분자는 원자들이 결합한 결과물로 나타납니다. 우리는 React를 쓰기 때문에 다양한 원자들을 결합시킨 분자를 컴포넌트화 시킬 수 있습니다.</p>\n        <p>분자 또한 마찬가지로 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>최대한 기존의 설계된 원자를 재사용하는 것을 목표로 하고 필요에 의해 새로 만들기도 합니다.</p>\n        <p>당연한 이야기지만 분자들을 합쳐 페이지 템플릿의 주축이 될 organisms(유기체)를 만듭니다.</p>\n        <br />\n        <br />\n        <h2>organisms</h2>\n        <br />\n        <p>컴포넌트 단위의 최종 결정물인 유기체입니다.</p>\n        <p>이 컴포넌트들을 간단한 예로 들면 웹의 header나 footer, hambergbar, article등 페이지 템플릿에 직접적으로 들어간 요소들 입니다.</p>\n        <p>우리는 설계를 하면서 페이지에 들어갈 모든 유기체를 만드는 것은 불가능하다고 생각했습니다.</p>\n        <p>하지만 자주쓰이는 header나 footer같은 경우는 재사용될 가능성이 크기 때문에 이러한 컴포넌트는 미리 설계를 해놓기로 했습니다.</p>\n        <p>물론 기능이 많이 들어가는 컴포넌트도 로직의 분리를 위해서 미리 설계해놓았습니다.</p>\n        <br />\n        <br />\n      </IntroduceComment>\n    </IntroduceContainer>\n  );\n};\n\nexport default HomeIntroduce;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport HomeIntroduce from 'components/another/HomeIntroduce/HomeIntroduce';\n\nconst queryString = require('query-string');\n\nconst Home: React.FC = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  if (location.search) {\n    const query = queryString.parse(location.search);\n    history.replace(query.page);\n  }\n\n  return <HomeIntroduce />;\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const ComponentTemplateContainer = styled.div`\n  padding: 50px;\n`;\n\nexport const ComponentHeader = styled.h1`\n  margin-bottom: 20px;\n  font-weight: 600;\n  font-size: 1.8rem;\n  color: #4284bd;\n`;\n","import React from 'react';\nimport { ComponentTemplateContainer, ComponentHeader } from './ComponentTemplate.styled';\n\ninterface props {\n  header: string;\n  content: JSX.Element;\n}\n\nconst ComponentTemplate: React.FC<props> = ({ header, content }) => {\n  return (\n    <ComponentTemplateContainer>\n      <ComponentHeader>{header}</ComponentHeader>\n      {content}\n    </ComponentTemplateContainer>\n  );\n};\n\nexport default ComponentTemplate;\n","import styled, { css } from 'styled-components';\n\nexport const IntroContainer = styled.article`\n  margin: 30px 0;\n  text-align: left;\n`;\n\nexport const IntroSmallHeader = styled.h2`\n  margin-bottom: 30px;\n  font-weight: 500;\n  font-size: 1.5rem;\n  color: #374553;\n`;\n\nexport const IntroParagraph = styled.p`\n  margin-bottom: 70px;\n  line-height: 1.5;\n  color: #374553;\n`;\n\nexport const ComponentWrapper = styled.div<{ blackBG?: boolean }>`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  ${props =>\n    props.blackBG &&\n    css`\n      background-color: rgba(0, 0, 0, 0.7);\n      color: #fff;\n    `}\n`;\n\nexport const ControlBox = styled.div<{ direction?: string }>`\n  padding: 20px;\n  display: flex;\n  flex-direction: ${props => props.direction || 'column'};\n  justify-content: center;\n  align-items: center;\n  color: #374553;\n\n  @media (max-width: 769px) {\n    flex-direction: column;\n  }\n\n  input {\n    width: 150px;\n    margin: 10px 15px;\n  }\n\n  input[type='text'] {\n    padding: 7px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: inset 0px 1px 3px 0px rgba(0, 0, 0, 0.08);\n    background-color: #fafafa;\n    font-size: 0.8rem;\n    color: #374553;\n  }\n\n  input[type='text']:focus {\n    outline: none;\n    background-color: #f6f6f6;\n  }\n\n  input[type='submit'] {\n    width: 100px;\n    padding: 7px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.08) 0px 4px 12px;\n    background-color: #e6e6e6;\n    font-size: 0.8rem;\n    color: #374553;\n    cursor: pointer;\n  }\n\n  input[type='color'] {\n    width: 60px;\n  }\n\n  button {\n    width: 140px;\n    height: 40px;\n    margin: 10px 20px;\n    border: 3px solid #4284bd;\n    border-radius: 10px;\n    background-color: transparent;\n    font-size: 0.9rem;\n    color: #4284bd;\n    cursor: pointer;\n  }\n\n  button.active {\n    background-color: #4284bd;\n    color: #fff;\n  }\n\n  @media (max-width: 1025px) {\n    form.responsive {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n`;\n\nexport const PropsTable = styled.table`\n  width: 100%;\n  margin: 20px 0;\n  margin-bottom: 100px;\n  text-align: center;\n\n  td,\n  th {\n    width: 33%;\n    padding: 12px 15px;\n    color: #374553;\n  }\n\n  th {\n    background-color: #499cd3;\n    color: #fff;\n  }\n\n  th:first-child {\n    border-radius: 10px 0 0 0;\n  }\n\n  th:last-child {\n    border-radius: 0 10px 0 0;\n  }\n\n  tr {\n    border-bottom: 1px solid #ddd;\n  }\n\n  tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n`;\n\nexport const MarginBox = styled.div<{ margin: number }>`\n  margin-bottom: ${props => `${props.margin}px`};\n`;\n\nexport const CodeBox = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n  border-radius: 15px;\n  background-color: #f6f6f6;\n  line-height: 1.3;\n`;\n\nexport const ListBox = styled.ul`\n  width: 100%;\n  margin: 20px 0;\n  padding-left: 20px;\n  list-style-type: disc;\n\n  li {\n    padding: 15px 0;\n    color: #374553;\n  }\n`;\n","import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button<{ width: string; height: string; disabled?: boolean; isLoading?: boolean }>`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  border: none;\n  border-radius: 10px;\n  background-color: #e2ce38;\n  font-weight: 600;\n  font-size: 1.1rem;\n  color: #fff;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n\n  ${props =>\n    props.disabled &&\n    css`\n      opacity: 0.6;\n      cursor: not-allowed;\n    `}\n\n  ${props =>\n    props.isLoading &&\n    css`\n      cursor: not-allowed;\n    `}\n\n  &:hover {\n    transform: translateZ(0) scale(0.97);\n  }\n\n  svg {\n    font-size: 1.7rem;\n\n    -webkit-animation: spin 3s linear infinite;\n    -moz-animation: spin 3s linear infinite;\n    animation: spin 3s linear infinite;\n    @-moz-keyframes spin {\n      100% {\n        -moz-transform: rotate(360deg);\n      }\n    }\n    @-webkit-keyframes spin {\n      100% {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    @keyframes spin {\n      100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { BiLoaderCircle } from 'react-icons/bi';\nimport { StyledButton } from './Button.styled';\n\ninterface props {\n  width: string;\n  height: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  onClick?: (event?: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Button: React.FC<props> = props => {\n  const { isLoading, children } = props;\n  return <StyledButton {...props}>{isLoading ? <BiLoaderCircle /> : children}</StyledButton>;\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  ControlBox,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Button from 'components/atoms/Button/Button';\n\nconst ButtonIntro: React.FC = () => {\n  const [inputs, setInputs] = useState({\n    width: '250',\n    height: '50',\n    content: '안녕하세요',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const onButtonClick = () => {\n    alert('버튼을 클릭하셨습니다');\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        버튼은 atoms에 있어서 가장 중요하고 기본이되는 컴포넌트입니다. <br />\n        사실 그만큼 기능들도 많이 들어가있고 복잡하게 고려해야 할 요소들이 많습니다. <br />\n        우선 우리는 디자인팀과 개발팀의 협의로 영업팀의 요구에 맞는 결과물을 위하여 유연한 컴포넌트로 만들기로 했습니다.{' '}\n        <br />\n        버튼은 아주 많이 쓰이는 컴포넌트인 만큼 변화되는 부분도 많고 대처해야 할 부분이 많을 것입니다. <br />\n        그래서 저희는 이 이슈에 맞춰 설계하게 되었습니다. <br />\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Button width={`${inputs.width}px`} height={`${inputs.height}px`} onClick={onButtonClick}>\n          {inputs.content}\n        </Button>\n      </ComponentWrapper>\n      <ControlBox>\n        <div>\n          넓이:{' '}\n          <input type=\"range\" name=\"width\" value={inputs.width} min=\"100\" max=\"500\" step=\"10\" onChange={handleInput} />\n        </div>\n        <div>\n          높이:{' '}\n          <input type=\"range\" name=\"height\" value={inputs.height} min=\"50\" max=\"150\" step=\"5\" onChange={handleInput} />\n        </div>\n        <div>\n          내용:{' '}\n          <input\n            type=\"text\"\n            name=\"content\"\n            placeholder=\"내용을 써주세요\"\n            value={inputs.content}\n            onChange={handleInput}\n          />\n        </div>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경 색</td>\n            <td>넓이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>글자 크기</td>\n            <td>높이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>그림자</td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper>\n        <Button width=\"200px\" height=\"60px\">\n          기본 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" disabled>\n          막힌 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" isLoading>\n          로딩 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" disabled isLoading>\n          막힌 로딩 버튼\n        </Button>\n      </ComponentWrapper>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        주의할 점은 디자인의 통일성을 위해 배경색은 <b>옐로우계열의 컬러로 통일</b>하였다는 것과 폰트와 색깔또한\n        통일하였다는 것입니다.\n        <br />\n        또한 다양한 기획의견을 반영하여 넓이와 높이를 가변요소로 두어 <b>여러 크기의 버튼을 제작</b>할 수 있다는 것을\n        염두하여야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Button width=&#123;\"150px\"&#125; height=&#123;\"70px\"&#125; disabled isLoading\n          onClick=&#123;clickMethod&#125;&gt;&lt;/Button&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>width: string (버튼의 넓이 '%, px 등등 여러단위 가능')</li>\n        <li>height: string (버튼의 높이 '%, px 등등 여러단위 가능')</li>\n        <li>disabled?: boolean - (disable버튼 활성화)</li>\n        <li>isLoading?: boolean - (loading버튼 활성화)</li>\n        <li>onClick?: (event?: React.MouseEvent&lt;HTMLElement&gt;) =&gt; void - (onClick 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default ButtonIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport ButtonIntro from 'components/another/Intro/ButtonIntro';\n\nconst Button: React.FC = () => {\n  return <ComponentTemplate header=\"Button\" content={<ButtonIntro />} />;\n};\n\nexport default Button;\n","import styled, { css } from 'styled-components';\n\nconst readOnlyCss = css`\n  opacity: 0.6;\n\n  &:focus {\n    border: 3px solid transparent;\n  }\n`;\n\nconst InputDefault = styled.input<{ width: string, readOnly?: boolean }>`\n  width: ${props => props.width};\n  padding: 10px;\n  border: 3px solid transparent;\n  border-radius: 10px;\n  box-sizing: border-box;\n  font-size: 0.85rem;\n`;\n\nexport const StyledWhiteInput = styled(InputDefault)`\n  background-color: #fff;\n  color: #131313;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #e2ce38;\n  }\n\n  ${props => props.readOnly && readOnlyCss}\n`;\n\nexport const StyledBlackInput = styled(InputDefault)`\n  background-color: #818181;\n  color: #fff;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #6b6b6b;\n  }\n\n  ${props => props.readOnly && readOnlyCss}\n`;\n","import React from 'react';\nimport { StyledWhiteInput, StyledBlackInput } from './Input.styled';\n\ninterface props {\n  width: string;\n  value: string;\n  name: string;\n  placeholder?: string;\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  readOnly?: boolean;\n  black?: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const TextInput: React.FC<props> = props => {\n  const { black } = props;\n  return <>{black ? <StyledBlackInput type=\"text\" {...props} /> : <StyledWhiteInput type=\"text\" {...props} />}</>;\n};\n\nexport const EmailInput: React.FC<props> = props => {\n  const { black } = props;\n  return <>{black ? <StyledBlackInput type=\"email\" {...props} /> : <StyledWhiteInput type=\"email\" {...props} />}</>;\n};\n\nexport const PasswordInput: React.FC<props> = props => {\n  const { black } = props;\n  return (\n    <>{black ? <StyledBlackInput type=\"password\" {...props} /> : <StyledWhiteInput type=\"password\" {...props} />}</>\n  );\n};\n\nexport const NumberInput: React.FC<props> = props => {\n  const { black } = props;\n  return <>{black ? <StyledBlackInput type=\"number\" {...props} /> : <StyledWhiteInput type=\"number\" {...props} />}</>;\n};\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  ControlBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport { TextInput, EmailInput, PasswordInput, NumberInput } from 'components/atoms/Input/Input';\n\nconst InputIntro: React.FC = () => {\n  const [overviewInput, setOverviewInput] = useState({\n    textWhiteInput: '',\n    textBlackInput: '',\n  });\n\n  const [inputs, setInputs] = useState({\n    width: '200',\n  });\n\n  const handleOverviewInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setOverviewInput({ ...overviewInput, [name]: value });\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const hndleFakeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    return;\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        인풋은 고객의 정보를 담고 전달해주는 컴포넌트로 매우 중요하고 로직이 복잡합니다. <br />\n        많은 기능들이 들어간 만큼 문서를 깊이 보고 이해하는 것을 추천드립니다. <br />\n        인풋은 다양한 상황에서 디자인의 변화가 일어나므로 다양한 디자인을 제작해야 했습니다. 그에 따라 개발도 다양하게\n        이루어져야 했습니다. <br />\n        그래서 우리는 텍스트, 이메일, 비밀번호 등 다양한 형태의 인풋컴포넌트를 제작하기로 했습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper blackBG>\n        <TextInput\n          width={`${inputs.width}px`}\n          value={overviewInput.textWhiteInput}\n          name=\"textWhiteInput\"\n          placeholder=\"값을 입력해주세요\"\n          onChange={handleOverviewInput}\n        />\n        <MarginBox margin={20} />\n        <TextInput\n          width={`${inputs.width}px`}\n          value={overviewInput.textBlackInput}\n          name=\"textBlackInput\"\n          placeholder=\"값을 입력해주세요\"\n          black\n          onChange={handleOverviewInput}\n        />\n      </ComponentWrapper>\n      <ControlBox>\n        <div>\n          넓이:{' '}\n          <input\n            type=\"range\"\n            name=\"width\"\n            placeholder=\"ex) 150px\"\n            value={inputs.width}\n            min=\"100\"\n            max=\"500\"\n            step=\"10\"\n            onChange={handleInput}\n          />\n        </div>\n        <MarginBox margin={20} />\n        <div>\n          현재 변수에 저장되는 인풋 값(하양): <b>{overviewInput.textWhiteInput}</b>\n        </div>\n        <MarginBox margin={20} />\n        <div>\n          현재 변수에 저장되는 인풋 값(검정): <b>{overviewInput.textBlackInput}</b>\n        </div>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>높이</td>\n            <td>넓이</td>\n            <td>배경색(하양, 검정)</td>\n          </tr>\n          <tr>\n            <td>글자 크기</td>\n            <td>플레이스홀더</td>\n            <td>인풋 타입(텍스트, 이메일, 등등...)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper blackBG>\n        텍스트\n        <TextInput width=\"200px\" value=\"텍스트\" name=\"text\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        이메일\n        <EmailInput width=\"200px\" value=\"email@email.com\" name=\"email\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        비밀번호\n        <PasswordInput width=\"200px\" value=\"password\" name=\"password\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        숫자\n        <NumberInput width=\"200px\" value=\"15\" name=\"number\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        읽기전용\n        <TextInput width=\"200px\" value=\"읽기전용\" name=\"text\" readOnly onChange={hndleFakeInput} />\n      </ComponentWrapper>\n      <MarginBox margin={60} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        주의해야할 부분은 <b>넓이는 가변요소이지만 높이는 고정요소</b>이기 때문에 디자인할 때 주의해야합니다. <br />\n        또한 인풋 타입이 여러개이므로 상황에 맞는 인풋을 골라 적절하게 사용하는 것은 굉장히 중요합니다. <br />\n        개발자들은 인풋의 <b>'name'</b>에 신경써서 디바이스의 자동완성 기능을 활용할 수 있도록 신경써야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;TextInput /&gt;&nbsp;&lt;EmailInput /&gt;&nbsp;&lt;PasswordInput /&gt;&nbsp;&lt;NumberInput /&gt;\n          <br />\n          <br />\n          &lt;TextInput <br />\n          &nbsp;&nbsp;width=&#123;\"200px\"&#125; <br />\n          &nbsp;&nbsp;value=&#123;inputState&#125; <br />\n          &nbsp;&nbsp;name=\"text\" <br />\n          &nbsp;&nbsp;placeholder=\"값을 입력하세요\" <br />\n          &nbsp;&nbsp;required <br />\n          &nbsp;&nbsp;miLength=&#123;5&#125; <br />\n          &nbsp;&nbsp;maxLength=&#123;10&#125; <br />\n          &nbsp;&nbsp;readonly <br />\n          &nbsp;&nbsp;black <br />\n          &nbsp;&nbsp;onChange=&#123;changeMethod&#125; <br />\n          /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>width: string (인풋의 넓이 '%, px 등등 여러단위 가능')</li>\n        <li>value: string (인풋의 값)</li>\n        <li>name: string ('email, phone, birthday' 등으로 자동완성 가능)</li>\n        <li>placeholder?: string (인풋이 비어있을 때 보여지는 글자)</li>\n        <li>required?: boolean (필수 입력)</li>\n        <li>minLength?: number (최소 글자수)</li>\n        <li>maxLength?: number (최대 글자수)</li>\n        <li>readOnly?: boolean (읽기 전용 활성화)</li>\n        <li>black?: boolean (검정테마 인풋 사용)</li>\n        <li>onChange: (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void (onChange 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default InputIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport InputIntro from 'components/another/Intro/InputIntro';\n\nconst Inupt: React.FC = () => {\n  return <ComponentTemplate header=\"Input\" content={<InputIntro></InputIntro>} />;\n};\n\nexport default Inupt;\n","import styled from 'styled-components';\n\nexport const StyledCheckbox = styled.input<{imgUrl: string}>`\n  display: none;\n\n  + label {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 2px solid #e2ce38;\n    border-radius: 50%;\n    background: url(${props => props.imgUrl}) no-repeat center/70%;\n    cursor: pointer;\n  }\n\n  &:checked + label {\n    background-color: #e2ce38;\n  }\n`;\n","import React from 'react';\nimport { StyledCheckbox } from './Checkbox.styled';\n\ninterface props {\n  id: string;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Checkbox: React.FC<props> = props => {\n  const { checked, id } = props;\n  const imageUrl = process.env.PUBLIC_URL + (checked ? '/asset/checked.png' : '/asset/non-check.png');\n  return (\n    <>\n      <StyledCheckbox type=\"checkbox\" {...props} imgUrl={imageUrl} />\n      <label htmlFor={id}></label>\n    </>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Checkbox from 'components/atoms/Checkbox/Checkbox';\n\nconst CheckboxIntro: React.FC = () => {\n  const [checks, setChecks] = useState({\n    check1: false,\n    check2: false,\n  });\n\n  const handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { id, checked } = event.target;\n    setChecks({ ...checks, [id]: checked });\n  };\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        체크박스는 인풋계열에 있어서 필수적인 요소입니다. <br />\n        고객들이 저희가 원하는 대답을 할 보장이 없기때문에 선택적인 답변을 받기 위해서 꼭 필요합니다. <br />\n        개발자는 기존 인풋 체크박스와 다르게 접근하기 때문에 유심히 볼 필요가 있습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <label>체크박스1 </label>\n        <br />\n        <Checkbox id=\"check1\" checked={checks.check1} onChange={handleChecked} />\n        <br />\n        <br />\n        <label>체크박스2 </label>\n        <br />\n        <Checkbox id=\"check2\" checked={checks.check2} onChange={handleChecked} />\n      </ComponentWrapper>\n      <ControlBox>\n        체크박스 1: {checks.check1 ? '체크됨' : '체크 안됨'}\n        <br />\n        <br />\n        체크박스 2: {checks.check2 ? '체크됨' : '체크 안됨'}\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>체크 여부</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        개발적으로 주의할 점이 몇개 있습니다. 우선 체크박스의 'v'자 모양은 이미지로 구현되었기에 이미지 url을 정해진\n        위치와 이름을 가지고있어야 합니다. <br />\n        위치는 <b>public폴더에 asset폴더</b> 안에 있어야하고 이름은 <b>'checked.png', 'non-check.png'</b> 이여야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Checkbox id=\"check1\" checked=&#123;checked&#125; onChange=&#123;changeMethod&#125; /&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>id: string (아이디 값, 필수적으로 들어가야함)</li>\n        <li>checked: boolean (체크 여부)</li>\n        <li>onChange: (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void; (onChange 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default CheckboxIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport CheckboxIntro from 'components/another/Intro/CheckboxIntro';\n\nconst Checkbox: React.FC = () => {\n  return <ComponentTemplate header=\"Checkbox\" content={<CheckboxIntro></CheckboxIntro>} />;\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst DecoHr: React.FC = () => {\n  return <ComponentTemplate header=\"DecoHr\" content={<></>} />;\n};\n\nexport default DecoHr;\n","import styled from 'styled-components';\n\nconst HeaderDefulat = styled.h1<{color?: string}>`\n  margin-bottom: 20px;\n  font-weight: 600;\n  color: ${props => props.color}\n`;\n\nexport const StyledLargeHeader = styled(HeaderDefulat)`\n  font-size: 2.5rem;\n`;\n\nexport const StyledSmallHeader = styled(HeaderDefulat)`\n  font-size: 1.875rem;\n`;\n","import React from 'react';\nimport { StyledLargeHeader, StyledSmallHeader } from './Header.styled';\n\ninterface props {\n  color?: string;\n}\n\nexport const LargeHeader: React.FC<props> = ({ children, color }) => {\n  let _color: string = '';\n  if (color === 'black') {\n    _color = '#1a1a1a';\n  } else if (color === 'white') {\n    _color = '#fff';\n  } else if (color === 'brand') {\n    _color = '#4284bd';\n  } else if (color === 'point') {\n    _color = '#e2ce38';\n  }\n  return <StyledLargeHeader color={_color}>{children}</StyledLargeHeader>;\n};\n\nexport const SmallHeader: React.FC<props> = ({ children, color }) => {\n  let _color: string = '';\n  if (color === 'black') {\n    _color = '#1a1a1a';\n  } else if (color === 'white') {\n    _color = '#fff';\n  } else if (color === 'brand') {\n    _color = '#4284bd';\n  } else if (color === 'point') {\n    _color = '#e2ce38';\n  }\n  return <StyledSmallHeader color={_color}>{children}</StyledSmallHeader>;\n};\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport { LargeHeader, SmallHeader } from 'components/atoms/Header/Header';\n\ninterface BtnActive {\n  black: boolean;\n  white: boolean;\n  brand: boolean;\n  point: boolean;\n}\n\nconst HeaderIntro: React.FC = () => {\n  const initialBtnActive: BtnActive = {\n    black: false,\n    white: false,\n    brand: false,\n    point: false,\n  };\n\n  const [btnActive, setBtnActive] = useState<BtnActive>({ ...initialBtnActive, black: true });\n  const [btnColor, setBtnColor] = useState('black');\n  const [inputs, setInputs] = useState({\n    content: '안녕하세요',\n  });\n\n  const handleHeaderColor = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.currentTarget;\n    setBtnActive({ ...initialBtnActive, [id]: true });\n    setBtnColor(id);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        헤더는 가장 심플한 컴포넌트입니다. 굳이 컴포넌트화 시키지않고 단순히 HTML로 작업해도 된다고 생각하겠지만 <br />\n        충분히 재사용될 가능성이 많고 원활한 디자인 시스템을 적용하려면 컴포넌트화를 해야한다고 생각하였습니다. <br />\n        따라서 개발쪽으로 많은 기능은 들어가있지않고 디자인 요소들의 비중이 큽니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper blackBG={btnActive.white}>\n        <LargeHeader color={btnColor}>{inputs.content}</LargeHeader>\n        <SmallHeader color={btnColor}>{inputs.content}</SmallHeader>\n      </ComponentWrapper>\n      <ControlBox>\n        <input\n          type=\"text\"\n          name=\"content\"\n          value={inputs.content}\n          placeholder=\"값을 입력해주세요\"\n          onChange={handleInput}\n        />\n      </ControlBox>\n      <ControlBox direction=\"row\">\n        <button id=\"black\" className={btnActive.black ? 'active' : ''} onClick={handleHeaderColor}>\n          블랙\n        </button>\n        <button id=\"white\" className={btnActive.white ? 'active' : ''} onClick={handleHeaderColor}>\n          화이트\n        </button>\n        <button id=\"brand\" className={btnActive.brand ? 'active' : ''} onClick={handleHeaderColor}>\n          브랜드\n        </button>\n        <button id=\"point\" className={btnActive.point ? 'active' : ''} onClick={handleHeaderColor}>\n          포인트\n        </button>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>내용</td>\n            <td>글자색 (검정, 하양, 브랜드, 포인트)</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>폰트</td>\n            <td>글자크기 (large, small)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        헤더에서는 딱히 주의해야할 점은 없습니다. <br />\n        다만 지정요소로 크기가 정해져 있기때문에 상황에 맞게 적절히 사용해주어야 합니다. <br />\n        그리고 개발단계에서 컬러를 지정할때 미리 정해놓은 enum을 사용해주어야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;LargeHeader&gt;&lt;/LargeHeader&gt; <br />\n          &lt;SmallHeader color=&quot;brand&quot;&gt;&lt;/SmallHeader&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>color?: string (글자색 'black', 'white', 'brand', 'point')</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default HeaderIntro;\n","import React from 'react';\nimport HeaderIntro from 'components/another/Intro/HeaderIntro';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Header: React.FC = () => {\n  return <ComponentTemplate header=\"Header\" content={<HeaderIntro />} />;\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const StyledHr = styled.hr`\n  width: 100%;\n  border-top: 1px solid #cfcfcf;\n`;","import React from 'react';\nimport { StyledHr } from './Hr.styled';\n\nconst Hr: React.FC = () => {\n  return <StyledHr />;\n};\n\nexport default Hr;\n","import React from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Hr from 'components/atoms/Hr/Hr';\n\nconst HrIntro: React.FC = () => {\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        hr은 한국말로 구분선이란 의미를 가집니다. 단락을 나눌 때나 내용을 분리시킬 때 사용합니다. <br />\n        단순히 선의 역할만 하기 때문에 특별한 역할은 없습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Hr />\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>두께</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>선 색</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>넓이가 풀사이즈이기 때문에 wrapper로 감싼후에 사용해야 적절한 효과를 볼 수 있습니다.</IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Hr /&gt;</code>\n      </CodeBox>\n      <ListBox></ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default HrIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport HrIntro from 'components/another/Intro/HrIntro';\n\nconst Hr: React.FC = () => {\n  return <ComponentTemplate header=\"Hr\" content={<HrIntro></HrIntro>} />;\n};\n\nexport default Hr;\n","import styled from 'styled-components';\n\nexport const StyledIcon = styled.img<{linked?: boolean}>`\n  width: 24px;\n  height: 24px;\n  margin: 12px;\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyledIcon } from './Icon.styled';\n\ninterface props {\n  src: string;\n  alt?: string;\n  to?: string;\n  onClick?: (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void;\n}\n\nconst Icon: React.FC<props> = props => {\n  const { to } = props;\n  return to ? (\n    <Link to={to}>\n      <StyledIcon {...props} linked />\n    </Link>\n  ) : (\n    <StyledIcon {...props} />\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Icon from 'components/atoms/Icon/Icon';\n\nconst IconIntro: React.FC = () => {\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        아이콘은 웹에서 쓰일 일이 굉장히 많습니다. 주로 sns로 연결할 때도 사용되고 심플한 UI를 구현할 때도 사용됩니다.{' '}\n        <br />\n        하지만 아이콘의 크기나 테마가 통일되지 않는다면 굉장히 복잡해보일 것입니다. 그래서 우리는 이러한 아이콘을\n        컴포넌트화를 통해 통일하고자 했습니다. <br />\n        다른 링크로의 연결과 앱과 웹의 크기의 통일성을 갖추었습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Icon src={process.env.PUBLIC_URL + '/asset/facebook.svg'} alt=\"icon\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/twitter.svg'} alt=\"icon\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/youtube.svg'} alt=\"icon\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/instagram.svg'} alt=\"icon\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/share.svg'} alt=\"icon\" />\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>비율</td>\n            <td>소스</td>\n            <td>크기 (웹, 앱)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper>\n        아이콘\n        <Icon src={process.env.PUBLIC_URL + '/asset/youtube.svg'} alt=\"icon\" />\n        <MarginBox margin={30} />\n        링크 아이콘\n        <Icon to=\"#\" src={process.env.PUBLIC_URL + '/asset/youtube.svg'} alt=\"icon\" />\n      </ComponentWrapper>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        이 컴포넌트는 <b>크기가 고정</b>이라는 것을 유의해야합니다. 반응형을 위해서 웹과 앱으로 형태를 나누었지만 그\n        안에서 해결해야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Icon <br />\n          &nbsp;&nbsp;to=\"/path\" <br />\n          &nbsp;&nbsp;src=&#123;process.env.PUBLIC_URL + \"/asset/icon.svg\"&#125; <br />\n          &nbsp;&nbsp;alt=\"icon\" <br />\n          &nbsp;&nbsp;onClick=&#123;clickMethod&#125; <br />\n          /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>to: string (라우팅 경로)</li>\n        <li>src: string (아이콘 소스)</li>\n        <li>alt: string (대체 텍스트)</li>\n        <li>onClick?: (event?: React.MouseEvent&lt;HTMLElement&gt;) =&gt; void - (onClick 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default IconIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport IconIntro from 'components/another/Intro/IconIntro';\n\nconst Icon: React.FC = () => {\n  return <ComponentTemplate header=\"Icon\" content={<IconIntro></IconIntro>} />;\n};\n\nexport default Icon;\n","import styled from 'styled-components';\n\nexport const StyledLinkButton = styled.span`\n  a {\n    margin-right: 20px;\n    font-size: 1.125rem;\n    color: #b6b6b6;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #fff;\n  }\n\n  a.active {\n    color: #e2ce38;\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyledLinkButton } from './LinkButton.styled';\n\ninterface props {\n  id?: string;\n  to: string;\n  active?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}\n\nconst LinkButton: React.FC<props> = ({ children, id, to, active, onClick }) => {\n  return (\n    <StyledLinkButton>\n      <Link id={id} to={to} className={active ? 'active' : undefined} onClick={onClick}>\n        {children}\n      </Link>\n    </StyledLinkButton>\n  );\n};\n\nexport default LinkButton;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport LinkButton from 'components/atoms/LinkButton/LinkButton';\n\ninterface Param {\n  page: string;\n}\n\ninterface ActivePage {\n  page1: boolean;\n  page2: boolean;\n  page3: boolean;\n  page4: boolean;\n}\n\nconst LinkButtonIntro: React.FC = () => {\n  const params = useParams<Param>();\n\n  const getCurrentActivePageObj = useCallback((): ActivePage => {\n    const initActivePages = {\n      page1: false,\n      page2: false,\n      page3: false,\n      page4: false,\n    };\n\n    if (Object.keys(params).length === 0) {\n      return { ...initActivePages };\n    } else {\n      const { page } = params;\n      return { ...initActivePages, [page]: true };\n    }\n  }, [params]);\n\n  const getCurrentPage = useCallback(() => {\n    if (Object.keys(params).length === 0) {\n      return '홈';\n    } else {\n      const { page } = params;\n      return page;\n    }\n  }, [params]);\n\n  const [activePages, setActivePages] = useState<ActivePage>(getCurrentActivePageObj());\n  const [currentPage, setCurrentPage] = useState(getCurrentPage());\n\n  const handleActivePage = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    setActivePages(getCurrentActivePageObj());\n  };\n\n  useEffect(() => {\n    setCurrentPage(getCurrentPage());\n    setActivePages(getCurrentActivePageObj());\n  }, [params, getCurrentPage, getCurrentActivePageObj]);\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        링크버튼은 다른 페이지로 라우팅을 하기위해 만들어진 버튼입니다. <br />\n        우리는 이 버튼을 드랍다웃이나 햄버거탭, 네비게이션 바 등에서 주로 사용하기로 했습니다.\n        <br />\n        페이지 이동은 충분히 재사용될 가능성이 많고 굳이 위의 컴포넌트가 아니더라도 사용할 여지가 많다고 생각을 해서\n        컴포넌트화 하게 되었습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper blackBG>\n        <LinkButton id=\"page1\" to=\"/atoms/link-button/page1\" active={activePages.page1} onClick={handleActivePage}>\n          페이지1\n        </LinkButton>\n        <br />\n        <LinkButton id=\"page2\" to=\"/atoms/link-button/page2\" active={activePages.page2} onClick={handleActivePage}>\n          페이지2\n        </LinkButton>\n        <br />\n        <LinkButton id=\"page3\" to=\"/atoms/link-button/page3\" active={activePages.page3} onClick={handleActivePage}>\n          페이지3\n        </LinkButton>\n        <br />\n        <LinkButton id=\"page4\" to=\"/atoms/link-button/page4\" active={activePages.page4} onClick={handleActivePage}>\n          페이지4\n        </LinkButton>\n      </ComponentWrapper>\n      <ControlBox>현재 페이지: {currentPage}</ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>글자 크기</td>\n            <td>내용</td>\n            <td>글자 색(액티브 유무)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper>\n        <LinkButton to=\"#\">기본 링크</LinkButton>\n        <MarginBox margin={20} />\n        <LinkButton to=\"#\" active>\n          액티브 링크\n        </LinkButton>\n      </ComponentWrapper>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        가장 중요한 부분은 이 컴포넌트는 네비게이션 바 같은 컴포넌트들과 같이 쓰인다는 것입니다. <br />\n        그래서 최소한의 기능만 링크 버튼에 유지한 채 링크 버튼의 상태를 유지하는 기능은 상위 컴포넌트에 맡기는 것이 좋습니다. <br />\n        또한 onClick과 id를 적절히 연결하여 액티브 상태를 유지하는 것도 좋은 방법입니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;LinkButton id =\"link1\" to=\"/page\" active onClick=&#123;clickMethod&#125; /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>id?: string (링크버튼 고유 식별)</li>\n        <li>to: string (라우팅 페이지)</li>\n        <li>active?: boolean (액티브 상태 활성화)</li>\n        <li>onClick?: (event: React.MouseEvent&lt;HTMLAnchorElement, MouseEvent&gt;) =&gt; void (onClick 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default LinkButtonIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport LinkButtonIntro from 'components/another/Intro/LinkButtonIntro';\n\nconst LinkButton: React.FC = () => {\n  return <ComponentTemplate header=\"Linkbutton\" content={<LinkButtonIntro></LinkButtonIntro>} />;\n};\n\nexport default LinkButton;\n","import styled from 'styled-components';\n\nexport const StyledUnderline = styled.span`\n  display: inline-block;\n  line-height: 0.25em;\n  border-bottom: 0.3em solid rgba(226, 206, 56, 0.7);\n;\n`;\n","import React from 'react';\nimport { StyledUnderline } from './Underline.styled';\n\nconst Underline: React.FC = ({ children }) => {\n  return <StyledUnderline>{children}</StyledUnderline>;\n};\n\nexport default Underline;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n} from './global-intro.styled';\nimport Underline from 'components/atoms/Underline/Underline';\n\nconst UnderlineIntro: React.FC = () => {\n  const [input, setInput] = useState('안녕하세요');\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInput(value);\n  };\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        이 컴포넌트는 특별히 대중적으로 쓰이는 재사용을 위한 것이 아닙니다. 단지 수시레시피 기존 홈페이지 컴포넌트에서\n        자주쓰이기에 컴포넌트화를 진행하기로 하였습니다. <br />\n        특별한 개발 기능은 없고 디자인적 요소가 기본을 이룹니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Underline>{input}</Underline>\n      </ComponentWrapper>\n      <ControlBox>\n        <input type=\"text\" value={input} placeholder=\"값을 입력해주세요\" onChange={handleInput} />\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>밑줄 색</td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        컴포넌트가 블럭형태가 아닌 인라인형태라는 것을 유의해야합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Underline&gt;&lt;/Underline&gt;\n        </code>\n      </CodeBox>\n    </IntroContainer>\n  );\n};\n\nexport default UnderlineIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport UnderlineIntro from 'components/another/Intro/UnderlineIntro';\n\nconst Underline: React.FC = () => {\n  return <ComponentTemplate header=\"Underline\" content={<UnderlineIntro></UnderlineIntro>} />;\n};\n\nexport default Underline;\n","import styled from 'styled-components';\n\nexport const StyledSubtitle = styled.div`\n  width: 100%;\n  padding: 30px;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  background-color: rgba(21, 21, 21, 0.6);\n  color: #fff;\n`;\n","import React from 'react';\nimport { StyledSubtitle } from './Subtitle.styled';\n\nconst Subtitle: React.FC = ({ children }) => {\n  return <StyledSubtitle>{children}</StyledSubtitle>;\n};\n\nexport default Subtitle;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #f6f6f6;\n  box-sizing: border-box;\n  font-size: 0.9rem;\n\n  span {\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { StyledWrapper } from './NotSupport.styled';\n\nconst NotSupport: React.FC = () => {\n  return (\n    <StyledWrapper>\n      <span>모바일에서는 Overview를</span>\n      <span>지원하지 않습니다.</span>\n    </StyledWrapper>\n  );\n};\n\nexport default NotSupport;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Subtitle from 'components/molecules/Subtitle/Subtitle';\nimport NotSupport from 'components/another/NotSupport/NotSupport';\n\nconst SubtitleIntro: React.FC = () => {\n  const [input, setInput] = useState('안녕하세요');\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInput(value);\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        서브타이틀은 한국말로 자막이라는 뜻입니다. 말그대로 이미지나 섹션에서 자막처럼 반투명한 박스를 넣고 싶을때\n        사용되는 컴포넌트입니다. <br />이 컴포넌트는 분자모양으로 서브타이틀 박스 안에는 어떠한 컴포넌트도 올 수 있게\n        설계하여 다양한 디자인이 가능합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      {window.innerWidth < 769 ? (\n        <NotSupport />\n      ) : (\n        <>\n          <ComponentWrapper>\n            <div style={{ width: '700px', position: 'relative' }}>\n              <img style={{ width: '100%' }} src={process.env.PUBLIC_URL + '/asset/subtitleBG.png'} alt=\"\" />\n              <Subtitle>{input}</Subtitle>\n            </div>\n          </ComponentWrapper>\n          <ControlBox>\n            <input type=\"text\" placeholder=\"값을 입력해주세요\" value={input} onChange={handleInput} />\n          </ControlBox>\n        </>\n      )}\n\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경색</td>\n            <td>넓이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>높이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        서브타이틀은 넓이가 가변요소로 되어있지만 <b>풀사이즈</b>입니다. 따라서 디자인하실때 기준을 하나 잡으시고 양끝에\n        맞게 배치해주셔야 합니다. <br />\n        개발할 때도 wrapper같은 블럭속성으로 감싸서 사용해주셔야합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Subtitle&gt;&#123;children&#125;&lt;/Subtitle&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>children: React.ReactNode (서브타이틀 안에 들어갈 컴포넌트)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default SubtitleIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport SubtitleIntro from 'components/another/Intro/SubtitleIntro';\n\nconst Subtitle: React.FC = () => {\n  return <ComponentTemplate header=\"Subtitle\" content={<SubtitleIntro></SubtitleIntro>} />;\n};\n\nexport default Subtitle;\n","export const SHOW_DROPDOWN = 'SHOW_DROPDOWN';\nexport const HIDDEN_DROPDOWN = 'HIDDEN_DROPDOWN';\n\nexport const showDropdown = (): DefaultAction => ({\n  type: SHOW_DROPDOWN,\n  payload: true,\n});\n\nexport const hiddenDropdown = (): DefaultAction => ({\n  type: HIDDEN_DROPDOWN,\n  payload: false,\n});\n","import styled from 'styled-components';\n\nexport const StyledDropdown = styled.div<{ leftPos?: number; show: boolean }>`\n  width: 100%;\n  padding: 10px;\n  padding-left: ${props => props.leftPos}px;\n  height: 48px;\n  display: ${props => (props.show ? 'flex' : 'none')};\n  align-items: center;\n  background-color: #262626;\n  box-sizing: border-box;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'common/store';\nimport LinkButton from 'components/atoms/LinkButton/LinkButton';\nimport { StyledDropdown } from './Dropdown.styled';\n\ninterface props {\n  menu: Array<Menu>;\n  leftPos?: number;\n  onMouseEnter?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Dropdown: React.FC<props> = ({ menu, leftPos, onMouseEnter, onMouseLeave }) => {\n  const isShow = useSelector<RootState, boolean>(state => state.dropdown);\n\n  return (\n    <StyledDropdown leftPos={leftPos} show={isShow} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n      {menu.map((menuItem, idx) => (\n        <LinkButton key={idx} to={menuItem.link}>\n          {menuItem.name}\n        </LinkButton>\n      ))}\n    </StyledDropdown>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showDropdown } from 'actions/dropdown';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Dropdown from 'components/molecules/Dropdown/Dropdown';\nimport NotSupport from 'components/another/NotSupport/NotSupport';\n\nconst DropdownIntro: React.FC = () => {\n  const defaultMenus = useMemo<Array<Menu>>(\n    () => [\n      {\n        name: 'button',\n        link: '#',\n      },\n      {\n        name: 'input',\n        link: '#',\n      },\n      {\n        name: 'header',\n        link: '#',\n      },\n    ],\n    []\n  );\n  const [inputs, setInputs] = useState({\n    menuItem: '',\n    startPos: 20,\n  });\n  const [menus, setMenus] = useState(defaultMenus);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMenu: Menu = {\n      name: inputs.menuItem,\n      link: '#',\n    };\n    setMenus([...menus, newMenu]);\n    setInputs({ ...inputs, menuItem: '' });\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    if (name === 'startPos') {\n      setInputs({ ...inputs, [name]: parseInt(value) });\n    } else {\n      setInputs({ ...inputs, [name]: value });\n    }\n  };\n\n  // initial open\n  useEffect(() => {\n    dispatch(showDropdown());\n  }, [dispatch]);\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        드랍다운은 유기체의 컴포넌트인 네비게이션바와 함께 사용됩니다. 네비게이션바의 메뉴에 마우스를 올렸을 때 세부\n        메뉴를 보여주는 컴포넌트입니다. <br />\n        우리는 드랍다운을 네비게이션바와 분리해야한다고 생각했고 컴포넌트화를 진행하였습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      {window.innerWidth < 769 ? (\n        <NotSupport />\n      ) : (\n        <>\n          <ComponentWrapper>\n            <Dropdown menu={menus} leftPos={inputs.startPos} />\n          </ComponentWrapper>\n\n          <ControlBox>\n            <form onSubmit={handleSubmit} style={{ textAlign: 'center' }}>\n              <input\n                type=\"text\"\n                name=\"menuItem\"\n                value={inputs.menuItem}\n                placeholder=\"값을 입력하세요\"\n                onChange={handleInput}\n              />\n              <input type=\"submit\" value=\"추가\" />\n            </form>\n            <div style={{ textAlign: 'center' }}>\n              메뉴 시작 위치:{' '}\n              <input\n                type=\"range\"\n                name=\"startPos\"\n                value={inputs.startPos}\n                min=\"20\"\n                max=\"500\"\n                step=\"10\"\n                onChange={handleInput}\n              />\n            </div>\n          </ControlBox>\n        </>\n      )}\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경 색</td>\n            <td>메뉴 이름</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>메뉴 간격</td>\n            <td>메뉴 시작 위치</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>높이</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        드랍다운 안에 메뉴들은 반드시 링크버튼으로 구성해야합니다. 그리고 <b>메뉴 시작위치</b>는 네비게이션 바 위치에\n        따라 달라지므로 변경할 수 있습니다. <br />\n        개발자들이 주의할 점은 리덕스로 <b>드랍다운 보여주기를 온오프</b> 할 수 있다는 점을 꼭 알고 있어야합니다. 이\n        부분은 네비게이션 바와 연관됩니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Dropdown menu=&#123;menuArray&#125; leftPos=&#123;50&#125; onMouseEnter=&#123;handleHoverOn&#125;\n          onMouseLeave&#123;handleHoverOut&#125; /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>menu: Array&lt;&#123; name: string; link: string; &#125;&gt; (메뉴 객체들의 리스트)</li>\n        <li>leftPos: number (메뉴 시작지점 위치)</li>\n        <li>onMouseEnter?: (event: React.MouseEvent&lt;HTMLDivElement, MouseEvent&gt;) =&gt; void;</li>\n        <li>onMouseLeave?: (event: React.MouseEvent&lt;HTMLDivElement, MouseEvent&gt;) =&gt; void;</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default DropdownIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport DropdownIntro from 'components/another/Intro/DropdownIntro';\n\nconst Dropdown: React.FC = () => {\n  return <ComponentTemplate header=\"Dropdown\" content={<DropdownIntro></DropdownIntro>} />;\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\n\nexport const StyledCard = styled.div<{ width: string }>`\n  width: ${props => props.width};\n  display: inline-block;\n`;\n\nexport const StyledCardHeader = styled.h1<{ headerColor?: string }>`\n  padding: 10px;\n  border-radius: 10px 10px 0 0;\n  background-color: ${props => props.headerColor || '#6b6b6b'};\n  text-align: center;\n  font-weight: 600;\n  font-size: 1.25rem;\n  color: #fff;\n`;\n\nexport const StyledCardContent = styled.div<{ height: string }>`\n  height: ${props => props.height};\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0 0 10px 10px;\n  background-color: #f6f6f6;\n  color: #333;\n`;\n","import React from 'react';\nimport { StyledCard, StyledCardHeader, StyledCardContent } from './Card.styled';\n\ninterface props {\n  width: string;\n  height: string;\n  header: string;\n  headerColor?: string;\n  onClick?: (event?: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Card: React.FC<props> = ({ width, height, header, headerColor, children, onClick }) => {\n  return (\n    <StyledCard width={width} onClick={onClick}>\n      <StyledCardHeader headerColor={headerColor}>{header}</StyledCardHeader>\n      <StyledCardContent height={height}>{children}</StyledCardContent>\n    </StyledCard>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Card from 'components/molecules/Card/Card';\n\nconst StyledSampleContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 64px;\n    height: 80px;\n    margin-bottom: 40px;\n  }\n\n  h1 {\n    text-align: center;\n    font-weight: 800;\n    font-size: 1.5rem;\n  }\n`;\n\nconst CardIntro: React.FC = () => {\n  const [inputs, setInputs] = useState({\n    width: '260',\n    height: '300',\n    headerColor: '#6b6b6b',\n  });\n\n  const sampleJSX = (\n    <StyledSampleContent>\n      <img src={process.env.PUBLIC_URL + '/asset/card_sample_icon.png'} alt=\"icon\" />\n      <h1>\n        자기소개서 첨삭 <br />및 완성본\n      </h1>\n    </StyledSampleContent>\n  );\n\n  const hadnleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        카드는 정보를 단위로 나누어 시각화로 보여준다는 장점이 있는 컴포넌트입니다. <br />\n        여러 모양의 카드를 사용할 때도 있지만 자주 쓰이는 카드 형태의 컴포넌트를 하나는 만들어 놓는 것이 좋겠다는 생각에\n        제작하게 되었습니다. <br />\n        또한 내용의 가변성을 유의하여 조금더 유연한 컴포넌트가 되는데에 집중하여 제작하였습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Card width={`${inputs.width}px`} height={`${inputs.height}px`} header=\"카드\" headerColor={inputs.headerColor}>\n          {sampleJSX}\n        </Card>\n      </ComponentWrapper>\n      <ControlBox>\n        <div>\n          넓이:{' '}\n          <input type=\"range\" name=\"width\" value={inputs.width} min=\"200\" max=\"600\" step=\"10\" onChange={hadnleInput} />\n        </div>\n        <div>\n          높이:{' '}\n          <input\n            type=\"range\"\n            name=\"height\"\n            value={inputs.height}\n            min=\"100\"\n            max=\"400\"\n            step=\"10\"\n            onChange={hadnleInput}\n          />\n        </div>\n        <div>\n          헤드 색: <input type=\"color\" name=\"headerColor\" value={inputs.headerColor} onChange={hadnleInput} />\n        </div>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>글자 색</td>\n            <td>헤드 색</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>내용 색</td>\n            <td>높이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>넓이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        헤더에는 글씨밖에 입력할 수 없습니다. 하지만 <b>내용에는 그림, 문단 등 다양하게 아무것</b>이나 들어갈 수\n        있습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Card width=&#123;\"260px\"&#125; height=&#123;\"300px\"&#125; header=\"카드\" headerColor=\"#6b6b6b\"\n          onClick=&#123;clickMethod&#125;&gt;&#123;sampleJSX&#125;&lt;/Card&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>width: string (카드의 넓이 '%, px 등등 여러단위 가능')</li>\n        <li>height: string (카드의 높이 '%, px 등등 여러단위 가능')</li>\n        <li>header: string (카드 제목)</li>\n        <li>headerColor?: string - (헤더의 색깔)</li>\n        <li>sampleJSX?: React.ReactNode - (내용에 들어갈 JSX)</li>\n        <li>onClick?: (event?: React.MouseEvent&lt;HTMLElement&gt;) =&gt; void - (onClick 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default CardIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport CardIntro from 'components/another/Intro/CardIntro';\n\nconst Card: React.FC = () => {\n  return <ComponentTemplate header=\"Card\" content={<CardIntro></CardIntro>} />;\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const StyledEventInfoCard = styled.div`\n  width: 100%;\n  padding: 25px 50px;\n  border-radius: 10px;\n  box-shadow: 0 5px 15px 0 rgba(199, 199, 199, 0.24);\n  box-sizing: border-box;\n\n  @media (max-width: 1025px) {\n    padding: 20px 30px;\n  }\n`;\n\nexport const StyledInfoRow = styled.div`\n  display: flex;\n  margin: 20px 0;\n\n  @media (max-width: 769px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const StyledInfoTab = styled.span`\n  width: 90px;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: #e2ce38;\n  box-shadow: 0 3px 6px 0 rgba(180, 180, 180, 0.16);\n  text-align: center;\n  font-weight: 600;\n  color: #fff;\n\n  @media (max-width: 1025px) {\n    width: 80px;\n    padding: 7px;\n  }\n\n  @media (max-width: 769px) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const StyledInfoContent = styled.div`\n  margin-left: 30px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  @media (max-width: 769px) {\n    margin-left: 0;\n    margin-bottom: 20px;\n  }\n`;\n","import React from 'react';\nimport { StyledEventInfoCard, StyledInfoTab, StyledInfoRow, StyledInfoContent } from './EventInfoCard.styled';\n\nexport interface row {\n  tab: string;\n  content: React.ReactNode;\n}\n\ninterface props {\n  rows: Array<row>;\n}\n\nconst EventInfoCard: React.FC<props> = ({ rows }) => {\n  return (\n    <StyledEventInfoCard>\n      {rows.map((row, idx) => (\n        <StyledInfoRow key={idx}>\n          <StyledInfoTab>{row.tab}</StyledInfoTab>\n          <StyledInfoContent>{row.content}</StyledInfoContent>\n        </StyledInfoRow>\n      ))}\n    </StyledEventInfoCard>\n  );\n};\n\nexport default EventInfoCard;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport EventInfoCard, { row } from 'components/molecules/EventInfoCard/EventInfoCard';\n\nconst EventInfoCardIntro: React.FC = () => {\n  const [eventRows, setEventRows] = useState<Array<row>>([\n    {\n      tab: '대상',\n      content: <div>고1~3학년 학생</div>,\n    },\n    {\n      tab: '기간',\n      content: <div>2021. 01. 01. ~ 2021. 09. 01.</div>,\n    },\n    {\n      tab: '장소',\n      content: <div>강남대로</div>,\n    },\n  ]);\n  const [inputs, setInputs] = useState({\n    tab: '',\n    content: '',\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newRow: row = {\n      tab: inputs.tab,\n      content: inputs.content,\n    };\n    setEventRows([...eventRows, newRow]);\n    setInputs({ tab: '', content: '' });\n  };\n\n  const handleInput = (evnet: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evnet.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        이벤트인포카드는 주로 행사나 이벤트가 있을 때 일정이나 내용을 간략히 알려주는 카드입니다. <br />\n        보통 페이지 상단에 위치하여 장소, 일정 등을 소개해주는 역할을 지닌 컴포넌트입니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n\n      <ComponentWrapper>\n        <EventInfoCard rows={eventRows} />\n      </ComponentWrapper>\n      <ControlBox>\n        <form className=\"responsive\" onSubmit={handleSubmit}>\n          탭:{' '}\n          <input\n            type=\"text\"\n            name=\"tab\"\n            value={inputs.tab}\n            placeholder=\"탭을 입력해주세요\"\n            required\n            onChange={handleInput}\n          />{' '}\n          내용:{' '}\n          <input\n            type=\"text\"\n            name=\"content\"\n            value={inputs.content}\n            placeholder=\"내용을 입력해주세요\"\n            required\n            onChange={handleInput}\n          />{' '}\n          <input type=\"submit\" value=\"한 줄 추가\" />\n        </form>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>탭 크기</td>\n            <td>탭 개수</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>탭 색깔</td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>넓이</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        이벤트인포카드는 넓이가 가변요소로 되어있지만 <b>풀사이즈</b>입니다. 따라서 디자인하실때 기준을 하나 잡으시고\n        양끝에 맞게 배치해주셔야 합니다. <br />\n        개발할 때는 탭 한 줄 당 주어진 객체 속성에 맞추어주셔야합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;EventInfoCard rows=&#123;eventRows&#125; /&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>rows: Array&lt;&#123; tab: string; content: React.ReactNode; &#125;&gt; (탭과 내용이 담긴 객체의 배열)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default EventInfoCardIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport EventInfoCardIntro from 'components/another/Intro/EventInfoCardIntro';\n\nconst EventInfoCard: React.FC = () => {\n  return <ComponentTemplate header=\"EventInfoCard\" content={<EventInfoCardIntro></EventInfoCardIntro>} />;\n};\n\nexport default EventInfoCard;\n","import styled from 'styled-components';\n\nexport const StyledStepCard = styled.div`\n  width: 100%;\n  height: 150px;\n  display: flex;\n\n  @media (max-width: 1025px) {\n    flex-direction: column;\n    height: initial;\n  }\n`;\n\nexport const StyledStepCardHeader = styled.div`\n  width: 200px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px 0 0 10px;\n  background-color: #464646;\n  font-weight: bold;\n  font-size: 1.85rem;\n  color: #fff;\n\n  @media (max-width: 1025px) {\n    width: 100%;\n    height: 70px;\n    border-radius: 10px 10px 0 0;\n  }\n`;\n\nexport const StyledStepCardContent = styled.div`\n  width: calc(100% - 200px);\n  height: 100%;\n  padding: 0 30px;\n  display: flex;\n  align-items: center;\n  border-radius: 0 10px 10px 0;\n  box-sizing: border-box;\n  background-color: #fafafa;\n\n  @media (max-width: 1025px) {\n    width: 100%;\n    padding: 30px 10px;\n    justify-content: center;\n    border-radius: 0 0 10px 10px;\n  }\n`;\n","import React from 'react';\nimport { StyledStepCard, StyledStepCardHeader, StyledStepCardContent } from './StepCard.styled';\n\ninterface props {\n  header: string;\n}\n\nconst StepCard: React.FC<props> = ({ header, children }) => {\n  return (\n    <StyledStepCard>\n      <StyledStepCardHeader>{header}</StyledStepCardHeader>\n      <StyledStepCardContent>{children}</StyledStepCardContent>\n    </StyledStepCard>\n  );\n};\n\nexport default StepCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport StepCard from 'components/molecules/StepCard/StepCard';\n\nconst StyledSampleContent = styled.div`\n  display: flex;\n\n  img {\n    width: 100px;\n    height: 100px;\n    margin: 0 40px;\n  }\n\n  h1 {\n    margin-bottom: 15px;\n    font-weight: 900;\n    font-size: 1.725rem;\n    color: #e2ce38;\n  }\n\n  p {\n    margin-bottom: 10px;\n    font-size: 1.1rem;\n    color: #333;\n  }\n\n  @media (max-width: 769px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    img {\n      margin: 20px 0;\n    }\n  }\n`;\n\nconst StepCardIntro: React.FC = () => {\n  const sampleJSX = (\n    <StyledSampleContent>\n      <img src={process.env.PUBLIC_URL + '/asset/step_sample_icon.png'} alt=\"step-icon\" />\n      <div>\n        <h1>과제수행</h1>\n        <p>제공받은 커리큘럼을 바탕으로 학생 맞춤형</p>\n        <p>과제를 과제 및 활동을 수행합니다</p>\n      </div>\n    </StyledSampleContent>\n  );\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        스텝카드는 단계를 보여주는 카드입니다. 프로그램이나 행사의 단계를 보여줄 때 효과적이라 생각하여 설계하게\n        되었습니다. <br />\n        카드와 비슷한 부분이 많지만 헤드와 내용의 배치가 다르므로 따로 제작의 필요성을 느꼈습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <StepCard header=\"1단계\">{sampleJSX}</StepCard>\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>높이</td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>넓이</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>배경색</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        헤더는 글이 들어가야하지만 메인내용에는 어떠한 것이 들어와도 상관없습니다. <br />\n        예른들어 헤더에는 '1단계' 등 글씨만 들어가지만{' '}\n        <b>메인 내용에는 어떠한 디자인이 들어간 콘텐츠가 들어오는 것을 허용</b>합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;StepCard header=\"1단계\"&gt;&#123;sampleJSX&#125;&lt;/StepCard&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>header: string (헤더에 쓰일 내용)</li>\n        <li>sampleJSX: React.ReactNode (내용 안에 들어갈 JSX)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default StepCardIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport StepCardIntro from 'components/another/Intro/StepCardIntro';\n\nconst StepCard: React.FC = () => {\n  return <ComponentTemplate header=\"StepCard\" content={<StepCardIntro></StepCardIntro>} />;\n};\n\nexport default StepCard;\n","import styled from 'styled-components';\n\nexport const StyledNavivagtionBar = styled.div`\n  width: 100%;\n  height: 60px;\n  padding: 0 10px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: stretch;\n  background-color: #606060;\n  box-sizing: border-box;\n\n  img {\n    width: 90px;\n    margin: 0 10px;\n  }\n`;\n\nexport const ImageBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledLinkBox = styled.div`\n  margin: 0 30px;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const LinkWrapper = styled.div<{ isHover?: boolean }>`\n  padding: 10px 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px 10px 0 0;\n  background-color: ${props => props.isHover ? '#262626' : 'none'};\n  box-sizing: border-box;\n\n  a {\n    margin: 0;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { StyledNavivagtionBar, StyledLinkBox, LinkWrapper, ImageBox } from './NavigationBar.styled';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LinkButton from 'components/atoms/LinkButton/LinkButton';\nimport Dropdown from 'components/molecules/Dropdown/Dropdown';\nimport { showDropdown, hiddenDropdown } from 'actions/dropdown';\n\ninterface props {\n  menu: Array<MainMenu>;\n  logoImgSrc: string;\n}\n\nconst NavigationBar: React.FC<props> = ({ menu, logoImgSrc }) => {\n  const [currentMenu, setCurrentMenu] = useState(0);\n  const [activeTab, setActiveTab] = useState(false);\n  const [dropdownPos, setDropdownPos] = useState<number | undefined>(0);\n  const [submenu, setSubmenu] = useState<Array<Menu>>([]);\n\n  const dispatch = useDispatch();\n\n  const handleHoverOn = useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      const { id } = event.currentTarget;\n      let isSubmenuEmpty: boolean = false;\n\n      menu.forEach((value, idx) => {\n        if (id === value.name) {\n          setCurrentMenu(idx);\n          setDropdownPos(value.pos);\n          setSubmenu(menu[idx].submenu);\n          if (menu[idx].submenu.length === 0) {\n            isSubmenuEmpty = true;\n          }\n        }\n      });\n\n      setActiveTab(true);\n      if (!isSubmenuEmpty) {\n        dispatch(showDropdown());\n      }\n    },\n    [dispatch, menu]\n  );\n\n  const handleHoverOut = useCallback(() => {\n    dispatch(hiddenDropdown());\n    setActiveTab(false);\n  }, [dispatch]);\n\n  return (\n    <>\n      <StyledNavivagtionBar>\n        <ImageBox>\n          <Link to=\"/\">\n            <img src={logoImgSrc} alt=\"logo\" />\n          </Link>\n        </ImageBox>\n        <StyledLinkBox>\n          {menu.map((value, idx) => (\n            <LinkWrapper\n              key={idx}\n              id={value.name}\n              onMouseEnter={handleHoverOn}\n              onMouseLeave={handleHoverOut}\n              isHover={currentMenu === idx && activeTab}\n            >\n              <LinkButton to=\"#\">{value.name}</LinkButton>\n            </LinkWrapper>\n          ))}\n        </StyledLinkBox>\n      </StyledNavivagtionBar>\n      <Dropdown\n        menu={submenu}\n        leftPos={dropdownPos}\n        onMouseEnter={handleHoverOn}\n        onMouseLeave={handleHoverOut}\n      />\n    </>\n  );\n};\n\nexport default NavigationBar;\n","import { hiddenDropdown } from 'actions/dropdown';\nimport NavigationBar from 'components/organisms/NavigationBar/NavigationBar';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport NotSupport from 'components/another/NotSupport/NotSupport';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\n\nconst NavigationBarIntro: React.FC = () => {\n  const defaultMenus: Array<MainMenu> = [\n    {\n      name: '수시레시피 소개',\n      link: '#',\n      submenu: [\n        { name: '수시페시피 소개', link: '#' },\n        { name: '컨설턴트', link: '#' },\n      ],\n      pos: 170,\n    },\n    {\n      name: '컨설팅 프로그램',\n      link: '#',\n      submenu: [\n        { name: '패키지 상품', link: '#' },\n        { name: '생활기록부', link: '#' },\n      ],\n      pos: 325,\n    },\n    {\n      name: '정시 컨설팅',\n      link: '#',\n      submenu: [],\n    },\n  ];\n\n  const dispatch = useDispatch();\n\n  // initial close\n  useEffect(() => {\n    dispatch(hiddenDropdown());\n  }, [dispatch]);\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        네비게이션바는 웹 사이트에 있어서 필수적인 요소입니다. 페이지를 이동할 수 있게 하는 기능을 담고 있어 아주\n        중요하고 복잡합니다. <br />\n        우리는 최대한 재사용을 잘하기 위해 여러 컴포넌트들의 집합체로 설계하였습니다. 링크버튼과 드랍다운이 이\n        컴포넌트를 구성합니다. <br />\n        컴포넌트의 구성은 메인메뉴와 서브메뉴로 나누어져 있습니다. 메인메뉴가 위에 있는 메뉴들이고 서브메뉴는 메인메뉴에\n        마우스를 올렸을 때 나타나는 메뉴들 입니다. <br />\n        보통 네비게이션바는 상단에 고정하여 사용하는 것을 원칙으로 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      {window.innerWidth < 1025 ? (\n        <NotSupport />\n      ) : (\n        <>\n          <ComponentWrapper>\n            <NavigationBar menu={defaultMenus} logoImgSrc={process.env.PUBLIC_URL + '/asset/logo3.png'} />\n          </ComponentWrapper>\n        </>\n      )}\n\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경 색</td>\n            <td>메뉴 리스트</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>로고</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        디자인부분에서 주의할 점은 네비게이션바는 넓이가 <b>항상 풀사이즈</b>여야 한다는 것입니다. 위 예시에는\n        풀사이즈가 아니지만 실제 홈페이지에서는 풀사이즈로 디자인되어야 합니다. <br />\n        개발부분에서는 prop이 까다롭기 때문에 타입을 유의깊게 봐야합니다. 또한 <b>서브메뉴가 없다면 빈 배열</b>을\n        넘겨주어야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;NavigationBar menu=&#123;defaultMenus&#125; logoImgSrc=&#123;process.env.PUBLIC_URL +\n          \"/asset/logo3.png\"&#125; /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>\n          menu: Array&lt;&#123;\n          <br />\n          &nbsp;&nbsp;name: string;\n          <br />\n          &nbsp;&nbsp;link: string;\n          <br />\n          &nbsp;&nbsp;submenu: Array&lt;&#123; name: string; link: string; &#125;&gt;;\n          <br />\n          &nbsp;&nbsp;pos?: number;\n          <br />\n          &#125;&gt; (메뉴 리스트)\n        </li>\n        <li>logoImgSrc: string (로고이미지 주소)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default NavigationBarIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport NavigationBarIntro from 'components/another/Intro/NavigationBarIntro';\n\nconst NavigationBar: React.FC = () => {\n  return <ComponentTemplate header=\"NavigationBar\" content={<NavigationBarIntro></NavigationBarIntro>} />;\n};\n\nexport default NavigationBar;\n","import styled from 'styled-components';\n\nexport const StyledFooter = styled.div`\n  width: 100%;\n  padding: 50px;\n  display: flex;\n  align-items: flex-end;\n  background-color: #000;\n  box-sizing: border-box;\n  color: #fff;\n\n  @media (max-width: 1025px) {\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const StyledFooterInfo = styled.div`\n  width: 60%;\n  text-align: left;\n\n  p {\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  @media (max-width: 1025px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledImageWrapper = styled.div`\n  margin-bottom: 15px;\n  display: flex;\n  align-items: flex-end;\n\n  img {\n    width: 90px;\n    height: 100%;\n  }\n\n  span {\n    display: inline-block;\n    margin-left: 10px;\n    font-size: 0.85rem;\n  }\n`;\n\nexport const StyledFooterLink = styled.div`\n  width: 40%;\n  text-align: right;\n\n  h1 {\n    font-weight: 600;\n    font-size: 1.1rem;\n    line-height: 1.5;\n  }\n\n  @media (max-width: 1025px) {\n    width: 100%;\n    margin-bottom: 40px;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { StyledFooter, StyledFooterInfo, StyledImageWrapper, StyledFooterLink } from './Footer.styled';\nimport Icon from 'components/atoms/Icon/Icon';\n\nconst Footer: React.FC = () => {\n  return (\n    <StyledFooter>\n      <StyledFooterInfo>\n        <StyledImageWrapper>\n          <img src={process.env.PUBLIC_URL + '/asset/logo3.png'} alt=\"logo\" />\n          <span>&copy;WESH</span>\n        </StyledImageWrapper>\n        <p>대표 김준호 | 사업자등록번호 860-40-003688 | 통신판매업신고번호 제 2018-성남중원-0234호</p>\n        <p>본점 서울특별시 서초구 강남대로 369 에이플러스에셋타워 12층 | 지점안내 전화: 02-363-7577</p>\n        <p>이메일: susirecipe@gmail.com</p>\n        <p>문의시간: 월~금 10:00 ~ 19:00</p>\n      </StyledFooterInfo>\n      <StyledFooterLink>\n        <h1>수시레시피만의</h1>\n        <h1>차별화된 입시정보 받기</h1>\n        <Icon src={process.env.PUBLIC_URL + '/asset/facebook_white.svg'} to=\"#\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/instagram_white.svg'} to=\"#\" />\n        <Icon src={process.env.PUBLIC_URL + '/asset/youtube_white.svg'} to=\"#\" />\n      </StyledFooterLink>\n    </StyledFooter>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n} from './global-intro.styled';\nimport Footer from 'components/organisms/Footer/Footer';\n\nconst FooterIntro: React.FC = () => {\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        푸터는 웹의 제일 하단에 위치하는 컴포넌트입니다. 주로 웹사이트의 정보나 링크, 저작권 등이 기재되있으며 빠질 수\n        없는 요소입니다. <br />\n        대부분의 페이지 하단에 들어가므로 자주 쓰일 일이 다분하여 제작하게 되었습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Footer />\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경 색</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>글자색</td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>내용</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        가장중요한 것은 <b>푸터는 변경될 요소가 없다</b>는 것입니다. 내용이나 아이콘의 변경을 원하면 개발자에게 문의해야합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Footer /&gt;</code>\n      </CodeBox>\n    </IntroContainer>\n  );\n};\n\nexport default FooterIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport FooterIntro from 'components/another/Intro/FooterIntro';\n\nconst Footer: React.FC = () => {\n  return <ComponentTemplate header=\"Footer\" content={<FooterIntro></FooterIntro>} />;\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const StyledHamberTab = styled.div`\n  width: 320px;\n  height: 100vh;\n  padding: 40px;\n  background-color: #000;\n  box-sizing: border-box;\n  overflow: scroll;\n\n  // To hide scroll bar\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const StyledImageWrapper = styled.div`\n  margin-bottom: 40px;\n  text-align: center;\n\n  img {\n    width: 120px;\n  }\n`;\n\nexport const StyledMainMenu = styled.div`\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #ccc;\n  color: #fff;\n\n  h1 {\n    margin-bottom: 15px;\n    font-weight: 600;\n    font-size: 1.6rem;\n  }\n\n  h2 {\n    font-size: 1rem;\n    margin-bottom: 10px;\n    padding-left: 20px;\n  }\n\n  a {\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyledHamberTab, StyledImageWrapper, StyledMainMenu } from './HambergTab.styled';\n\ninterface props {\n  menu: Array<MainMenu>;\n  logoImgSrc: string;\n}\n\nconst HanberTab: React.FC<props> = ({ menu, logoImgSrc }) => {\n  return (\n    <StyledHamberTab>\n      <StyledImageWrapper>\n        <Link to=\"/\">\n          <img src={logoImgSrc} alt=\"logo\" />\n        </Link>\n      </StyledImageWrapper>\n      {menu.map(item => (\n        <StyledMainMenu>\n          <h1>\n            <Link to=\"#\">{item.name}</Link>\n          </h1>\n          {item.submenu.map(subitem => (\n            <h2>\n              <Link to={subitem.link}>{subitem.name}</Link>\n            </h2>\n          ))}\n        </StyledMainMenu>\n      ))}\n    </StyledHamberTab>\n  );\n};\n\nexport default HanberTab;\n","import React from 'react';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport HambergTab from 'components/organisms/HambergTab/HambergTab';\n\nconst HamberTabIntro: React.FC = () => {\n  const defaultMenus: Array<MainMenu> = [\n    {\n      name: '수시레시피 소개',\n      link: '#',\n      submenu: [\n        {\n          name: '수시레시피 소개',\n          link: '#',\n        },\n        {\n          name: '컨설턴트',\n          link: '#',\n        },\n      ],\n    },\n    {\n      name: '컨설팅 프로그램',\n      link: '#',\n      submenu: [\n        {\n          name: '패키지상품',\n          link: '#',\n        },\n        {\n          name: '생활기록부',\n          link: '#',\n        },\n        {\n          name: '수시지원 솔루션',\n          link: '#',\n        },\n      ],\n    },\n    {\n      name: '정시컨설팅',\n      link: '#',\n      submenu: [],\n    },\n    {\n      name: '의대컨설팅',\n      link: '#',\n      submenu: [],\n    },\n    {\n      name: '컨설팅 후기',\n      link: '#',\n      submenu: [],\n    },\n  ];\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        햄버거탭은 모바일 환경에서의 메뉴바라고 생각하면 좋습니다. 메뉴버튼의 모양이 햄버거를 닮아 나온 용어입니다.{' '}\n        <br />\n        네비게이션바와 햄버거탭은 기능이 동일합니다. 다만 모바일과 데스크탑 환경에서 네비게이션 바의 활용이 적절치 못해\n        세로로 된 네비게이션 바의 필요로 설계하였습니다.\n        <br />\n        햄버거탭은 평소 브라우저의 왼쪽 뒤편에 존재하다가 클릭 시 왼쪽에서 슬라이딩으로 나오게 됩니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <HambergTab menu={defaultMenus} logoImgSrc={process.env.PUBLIC_URL + '/asset/logo3.png'} />\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경색</td>\n            <td>메뉴 리스트</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>로고</td>\n            <td></td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        햄버거탭의 위치는 <b>항상 왼쪽에 고정</b>되어 위치해야 합니다. 디자인할 때나 개발할 때에 주의하여야 합니다.{' '}\n        <br />\n        햄버거탭은 햄버거메뉴버튼과 같이 있어야합니다. 개발할 때 주의할 점은 왼쪽너머에 위치해있다가 사용될 때\n        슬라이드로 넘어오게끔 작업하여야하고 전체화면을 투명한 <b>블랙 레이아웃으로 덮어야 한다는 점</b>을 잊어서는\n        안됩니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;HambergTab menu=&#123;defaultMenus&#125; logoImgSrc=&#123;process.env.PUBLIC_URL + \"/asset/logo3.png\"&#125;\n          /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>\n          menu: Array&lt;&#123; <br />\n          &nbsp;&nbsp;name: string; <br />\n          &nbsp;&nbsp;link: string; <br />\n          &nbsp;&nbsp;submenu: Array&lt;&#123; name: string; link: string; &#125;&gt;; <br />\n          &nbsp;&nbsp;pos?: number; <br />\n          &#125;&gt; (메뉴 리스트)\n        </li>\n        <li>logoImgSrc: string (로고이미지 주소)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default HamberTabIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport HamberTabIntro from 'components/another/Intro/HambergTabIntro';\n\nconst HambergTab: React.FC = () => {\n  return <ComponentTemplate header=\"HambergTab\" content={<HamberTabIntro></HamberTabIntro>} />;\n};\n\nexport default HambergTab;\n","import styled from 'styled-components';\nimport { StyledCard } from 'components/molecules/Card/Card.styled';\n\nexport const StyledSlider = styled.div`\n  width: 100%;\n  display: block;\n\n  ${StyledCard} {\n    margin: 0 auto;\n    display: block;\n  }\n`;","import React from 'react';\nimport Slick from 'react-slick';\nimport { StyledSlider } from './Slider.styled';\nimport Card from 'components/molecules/Card/Card';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport styled from 'styled-components';\n\nconst StyledPrevButton = styled.button`\n  width: 40px;\n  height: 40px;\n  left: -40px;\n  &::before {\n    font-size: 40px;\n    color: #ccc;\n  }\n`;\n\nconst StyledNextButton = styled.button`\n  width: 40px;\n  height: 40px;\n  right: -40px;\n  &::before {\n    font-size: 40px;\n    color: #ccc;\n  }\n`;\n\nconst PrevButton = ({ className, style, onClick }: any) => {\n  return (\n    <StyledPrevButton className={className} style={{ ...style }} onClick={onClick}>\n      Previous\n    </StyledPrevButton>\n  );\n};\n\nconst NextButton = ({ className, style, onClick }: any) => {\n  return (\n    <StyledNextButton className={className} style={{ ...style }} onClick={onClick}>\n      Previous\n    </StyledNextButton>\n  );\n};\n\ninterface props {\n  slidesToShow?: number;\n  autoplay?: boolean;\n}\n\nconst Slider: React.FC<props> = ({ slidesToShow = 2, autoplay = true }) => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    autoplay,\n    autoplaySpeed: 5000,\n    slidesToShow,\n    slidesToScroll: 1,\n    prevArrow: <PrevButton />,\n    nextArrow: <NextButton />,\n  };\n\n  return (\n    <StyledSlider>\n      <Slick {...settings}>\n        <Card width=\"80%\" height=\"200px\" header=\"test\">\n          1\n        </Card>\n        <Card width=\"80%\" height=\"200px\" header=\"test\">\n          2\n        </Card>\n        <Card width=\"80%\" height=\"200px\" header=\"test\">\n          3\n        </Card>\n        <Card width=\"80%\" height=\"200px\" header=\"test\">\n          4\n        </Card>\n      </Slick>\n    </StyledSlider>\n  );\n};\n\nexport default Slider;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Slider from 'components/organisms/Slider/Slider';\n\nconst SliderIntro: React.FC = () => {\n  const [inputs, setInputs] = useState({\n    slideNum: '2',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        슬라이더는 굉장히 많은 기능이 들어가있는 컴포넌트입니다. 따라서 우리는 라이브러리를 쓰기로 했고 가장 유명한\n        리액트 슬라이더 라이브러리인 'react-slick'을 활용하여 제작하였습니다. <br />\n        슬라이더는 후기나 사례등을 나열하기 좋습니다. 수시레시피 이용 후기나 대학 합격 사례등을 나열할 때 사용합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Slider slidesToShow={parseInt(inputs.slideNum)} />\n      </ComponentWrapper>\n      <ControlBox>\n        슬라이드 개수:{' '}\n        <input\n          type=\"range\"\n          name=\"slideNum\"\n          value={inputs.slideNum}\n          placeholder=\"값을 입력해주세요\"\n          min=\"1\"\n          max=\"4\"\n          onChange={handleInput}\n        />\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>슬라이드 내용</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>슬라이드 개수</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>자동 넘기기</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        위의 예시에는 기존에 제작한 카드 분자를 사용했지만 <b>다양한 슬라이드카드 디자인이 가능합니다.</b> 예시의 형태에 얽메여 디자인할 필요가 없습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Slider slideToShow=&#123;2&#125; autoplay=&#123;true&#125; /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>slideToShow?: number (한 번에 보여지는 슬라이드 개수, 기본 2개)</li>\n        <li>autoplay?: string (자동 넘기기 기능, 기본 활성화)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default SliderIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport SliderIntro from 'components/another/Intro/SliderIntro';\n\nconst Slider: React.FC = () => {\n  return <ComponentTemplate header=\"Slider\" content={<SliderIntro></SliderIntro>} />;\n};\n\nexport default Slider;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Nstep: React.FC = () => {\n  return <ComponentTemplate header=\"Nstep\" content={<></>} />;\n};\n\nexport default Nstep;\n","import styled from 'styled-components';\n\nexport const StyledBanner = styled.section`\n  width: 100%;\n  padding: 30px 50px;\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledDescriptionBox = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: 1025px) {\n    display: none;\n  }\n\n  h1 {\n    font-weight: bold;\n    font-size: 1.8rem;\n    color: #fff;\n  }\n\n  h2 {\n    margin-bottom: 15px;\n    font-weight: 600;\n    font-size: 1.4rem;\n    color: #fff;\n  }\n`;\n\nexport const StyledSubmitBox = styled.form`\n  width: 50%;\n  display: flex;\n\n  @media (max-width: 1025px) {\n    width: 100%;\n  }\n\n  .inputbox {\n    width: 50%;\n  }\n\n  .buttonbox {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .checkbox {\n      display: flex;\n      align-items: center;\n    }\n\n    span {\n      margin-left: 10px;\n      font-size: 0.85rem;\n      color: #fff;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { StyledBanner, StyledDescriptionBox, StyledSubmitBox } from './Banner.styled';\nimport { TextInput } from 'components/atoms/Input/Input';\nimport Button from 'components/atoms/Button/Button';\nimport Checkbox from 'components/atoms/Checkbox/Checkbox';\n\ninterface props {\n  description: string;\n}\n\nconst Banner: React.FC<props> = ({ description }) => {\n  const [inputs, setInputs] = useState({\n    name: '',\n    phone: '',\n    private: true,\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setInputs({ name: '', phone: '', private: true });\n    alert('신청이 완료되었습니다.');\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked, id } = event.target;\n    setInputs({ ...inputs, [id]: checked });\n  };\n  return (\n    <StyledBanner>\n      <StyledDescriptionBox>\n        <h2>{description}</h2>\n        <h1>\n          지금 바로 온라인 <span style={{ color: '#bfa63c' }}>무료상담</span> 신청\n        </h1>\n      </StyledDescriptionBox>\n      <StyledSubmitBox onSubmit={handleSubmit}>\n        <div className=\"inputbox\">\n          <TextInput\n            width=\"100%\"\n            value={inputs.name}\n            name=\"name\"\n            placeholder=\"이름을 입력하세요\"\n            required\n            onChange={handleInput}\n          />\n          <br />\n          <br />\n          <TextInput\n            width=\"100%\"\n            value={inputs.phone}\n            name=\"phone\"\n            placeholder=\"연락처를 입력하세요\"\n            required\n            onChange={handleInput}\n          />\n        </div>\n        <div className=\"buttonbox\">\n          <Button width=\"80%\" height=\"70px\">\n            무료상담 하기\n          </Button>\n          <br />\n          <div className=\"checkbox\">\n            <Checkbox id=\"private\" checked={inputs.private} onChange={handleCheck} />\n            <span>개인정보보호정책에 동의합니다</span>\n          </div>\n        </div>\n      </StyledSubmitBox>\n    </StyledBanner>\n  );\n};\n\nexport default Banner;\n","import Banner from 'components/organisms/Banner/Banner';\nimport React from 'react';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\n\nconst BannerIntro: React.FC = () => {\n  const description = '위의 보고계신 대학이 당신의 대학이 될 수 있습니다.';\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        베너는 수시레시피 페이지에 중요 기능입니다. 보통 웹 하단에 위치하여 사용자들에게 지속적인 광고성 정보전달을 위해\n        제작하였습니다. <br />\n        기존의 베너로 유사하게 디자인하였지만 언제든 수정이 필요할 수 있는 컴포넌트입니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Banner description={description} />\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        넓이는 항상 <b>풀사이즈</b>여야만 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Banner description=\"위의 보고계신 대학이 당신의 대학이 될 수 있습니다.\" /&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>description: string (배너 왼쪽 상단의 글)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default BannerIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport BannerIntro from 'components/another/Intro/BannerIntro';\n\nconst Banner: React.FC = () => {\n  return <ComponentTemplate header=\"Banner\" content={<BannerIntro></BannerIntro>} />;\n};\n\nexport default Banner;\n","export const MODAL_OPEN = 'MODAL_OPEN';\nexport const MODAL_CLOSE = 'MODAL_CLOSE';\n\nexport const modalOpen = (): DefaultAction => ({\n  type: MODAL_OPEN,\n  payload: true,\n});\n\nexport const modalClose = (): DefaultAction => ({\n  type: MODAL_CLOSE,\n  payload: false,\n});\n","import styled from 'styled-components';\n\nexport const StyledModal = styled.div<{ isOpen: boolean }>`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: ${props => (props.isOpen ? 'flex' : 'none')};\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n`;\n\nexport const StyledModalContentBox = styled.div`\n  width: 600px;\n  height: 80vh;\n  padding: 20px;\n  position: relative;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  overflow: scroll;\n  background-color: #fff;\n\n  @media (max-width: 769px) {\n    width: 90%;\n  }\n\n  .close {\n    padding: 8px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 1.1rem;\n    color: #374553;\n    cursor: pointer;\n  }\n\n  // To hide scrollbar\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n`;\n\nexport const StyledModalBlackLayout = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { modalClose } from 'actions/modal';\nimport { RootState } from 'common/store';\nimport { StyledModalBlackLayout, StyledModalContentBox, StyledModal } from './Modal.styled';\nimport { FaTimes } from 'react-icons/fa';\n\nconst Modal: React.FC = ({ children }) => {\n  const isOpen = useSelector((state: RootState) => state.modal);\n  const dispatch = useDispatch();\n\n  const handleModal = () => {\n    dispatch(modalClose());\n  };\n\n  return (\n    <StyledModal isOpen={isOpen}>\n      <StyledModalBlackLayout onClick={handleModal} />\n      <StyledModalContentBox>\n        <FaTimes className=\"close\" onClick={handleModal} />\n        {children}\n      </StyledModalContentBox>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport { modalOpen } from 'actions/modal';\nimport Modal from 'components/organisms/Modal/Modal';\nimport Button from 'components/atoms/Button/Button';\nimport styled from 'styled-components';\n\nconst StyledSampleJSX = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n\n  h1 {\n    margin-bottom: 20px;\n    font-weight: bold;\n    font-size: 2rem;\n    color: #4284bd;\n  }\n\n  p {\n    margin-bottom: 10px;\n    line-height: 1.4;\n    font-size: 1rem;\n    color: #374553;\n  }\n\n  img {\n    width: 70px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ModalIntro: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sampleJSX = (\n    <StyledSampleJSX>\n      <h1>모달 예시입니다.</h1>\n      <p>이곳에 모달의 내용을 적으시면 됩니다.</p>\n      <p>\n        jsx로 값을 넘겨줄 수 있기 때문에 매우 자유로운 디자인이 가능합니다. 모달 안의 내용은 자유롭게 디자인하셔도\n        됩니다.\n      </p>\n      <img src={process.env.PUBLIC_URL + \"/asset/step_sample_icon.png\"} alt=\"sample_image\"/>\n      <p>이렇게 사진도 마음대로 넣을 수 있습니다.</p>\n    </StyledSampleJSX>\n  );\n\n  const hadnleModal = () => {\n    dispatch(modalOpen());\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        모달은 어떠한 웹사이트에서도 빠짐없이 등장하는 요소입니다. 따라서 우리는 모달을 컴포넌트화 하기로 했습니다.{' '}\n        <br />\n        모달은 주로 정보를 분리하여 보여주거나 따로 특장한 입력 값을 받을 때 사용됩니다. <br />\n        우리는 주로 버튼이나 특정 조건 시에 전체화면으로 모달을 보여주기로 설계하였고 모달 밖의 공간을 클릭하면 모달이\n        닫히도록 하였습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Modal>{sampleJSX}</Modal>\n        <Button width=\"130px\" height=\"40px\" onClick={hadnleModal}>\n          모달 열기\n        </Button>\n      </ComponentWrapper>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        모바일과 웹에서의 모달 크기가 다르므로 모달 안의 내용을 디자인할 때 유의하여 디자인해야합니다. <br />\n        개발에 있어서는 <b>리덕스로 모달을 온오프</b> 할 수 있으므로 유의하여 개발하여야합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>&lt;Modal&gt;&#123;children&#125;&lt;/Modal&gt;</code>\n      </CodeBox>\n      <ListBox>\n        <li>children: React.ReactNode (모달 내용)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default ModalIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport ModalIntro from 'components/another/Intro/ModalIntro';\n\nconst Modal: React.FC = () => {\n  return <ComponentTemplate header=\"Modal\" content={<ModalIntro></ModalIntro>} />;\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  width: calc(100vw - 300px);\n  margin-left: 300px;\n\n  @media screen and (max-width: 769px) {\n    width: 100%;\n    margin-left: 0;\n  }\n`;\n\nexport const MenuBtn = styled.span<{ hidden?: boolean }>`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: none;\n  font-size: 2.7rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: ${props => props.hidden ? 'none' : 'inline'};\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { slideOpen } from 'actions/slidebar';\nimport { ContentContainer, MenuBtn } from './Content.styled';\nimport { BiMenu } from 'react-icons/bi';\n\nconst Content: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const openSlideMenu = () => {\n    dispatch(slideOpen());\n  };\n\n  return (\n    <ContentContainer>\n      <MenuBtn>\n        <BiMenu onClick={openSlideMenu} />\n      </MenuBtn>\n      {children}\n    </ContentContainer>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ScrollToTop from 'common/ScrollToTop';\nimport Sidebar from 'components/another/Sidebar/Sidebar';\nimport Home from 'pages/Home';\nimport Button from 'pages/Button';\nimport Input from 'pages/Input';\nimport Checkbox from 'pages/Checkbox';\nimport DecoHr from 'pages/DecoHr';\nimport Header from 'pages/Header';\nimport Hr from 'pages/Hr';\nimport Icon from 'pages/Icon';\nimport LinkButton from 'pages/LinkButton';\nimport Underline from 'pages/Underline';\nimport Subtitle from 'pages/Subtitle';\nimport Dropdown from 'pages/Dropdown';\nimport Card from 'pages/Card';\nimport EventInfoCard from 'pages/EventInfoCard';\nimport StepCard from 'pages/StepCard';\nimport NavigationBar from 'pages/NavigationBar';\nimport Footer from 'pages/Footer';\nimport HambergTab from 'pages/HambergTab';\nimport Slider from 'pages/Slider';\nimport Nstep from 'pages/Nstep';\nimport Banner from 'pages/Banner';\nimport Modal from 'pages/Modal';\nimport Content from 'components/another/Content/Content';\n\nconst AppRouter: React.FC = () => (\n  <Router basename=\"/susirecipe-design-system\">\n    <ScrollToTop />\n    <Sidebar />\n    <Content>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"/atoms/button\">\n          <Button />\n        </Route>\n        <Route path=\"/atoms/input\">\n          <Input />\n        </Route>\n        <Route path=\"/atoms/checkbox\">\n          <Checkbox />\n        </Route>\n        <Route path=\"/atoms/deco-hr\">\n          <DecoHr />\n        </Route>\n        <Route path=\"/atoms/header\">\n          <Header />\n        </Route>\n        <Route path=\"/atoms/hr\">\n          <Hr />\n        </Route>\n        <Route path=\"/atoms/icon\">\n          <Icon />\n        </Route>\n        <Route path=\"/atoms/link-button/:page\">\n          <LinkButton />\n        </Route>\n        <Route path=\"/atoms/link-button\">\n          <LinkButton />\n        </Route>\n        <Route path=\"/atoms/underline\">\n          <Underline />\n        </Route>\n\n        <Route path=\"/molecules/subtitle\">\n          <Subtitle />\n        </Route>\n        <Route path=\"/molecules/dropdown\">\n          <Dropdown />\n        </Route>\n        <Route path=\"/molecules/card\">\n          <Card />\n        </Route>\n        <Route path=\"/molecules/event-info-card\">\n          <EventInfoCard />\n        </Route>\n        <Route path=\"/molecules/step-card\">\n          <StepCard />\n        </Route>\n\n        <Route path=\"/organisms/navigation-bar\">\n          <NavigationBar />\n        </Route>\n        <Route path=\"/organisms/footer\">\n          <Footer />\n        </Route>\n        <Route path=\"/organisms/hamberg-tab\">\n          <HambergTab />\n        </Route>\n        <Route path=\"/organisms/slider\">\n          <Slider />\n        </Route>\n        <Route path=\"/organisms/n-step\">\n          <Nstep />\n        </Route>\n        <Route path=\"/organisms/banner\">\n          <Banner />\n        </Route>\n        <Route path=\"/organisms/modal\">\n          <Modal />\n        </Route>\n      </Switch>\n    </Content>\n  </Router>\n);\n\nexport default AppRouter;\n","import { createStore, combineReducers } from 'redux';\nimport { slideReducer } from 'reducers/slidebar';\nimport { dropdownReducer } from 'reducers/dropdown';\nimport { modalReducer } from 'reducers/modal';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  slidebar: slideReducer,\n  dropdown: dropdownReducer,\n  modal: modalReducer,\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { SLIDE_OPEN, SLIDE_CLOSE } from 'actions/slidebar';\n\nconst initialState: boolean = false;\n\nexport const slideReducer = (state = initialState, action: DefaultAction): boolean => {\n  switch (action.type) {\n    case SLIDE_OPEN:\n      return true;\n    case SLIDE_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { SHOW_DROPDOWN, HIDDEN_DROPDOWN } from 'actions/dropdown';\n\nconst initialState: boolean = false;\n\nexport const dropdownReducer = (state = initialState, action: DefaultAction): boolean => {\n  switch (action.type) {\n    case SHOW_DROPDOWN:\n      return action.payload;\n    case HIDDEN_DROPDOWN:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { MODAL_OPEN, MODAL_CLOSE } from 'actions/modal';\n\nconst initialState: boolean = false;\n\nexport const modalReducer = (state = initialState, action: DefaultAction) => {\n  switch (action.type) {\n    case MODAL_OPEN:\n      return true;\n    case MODAL_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport AppRouter from 'Router';\nimport { Provider } from 'react-redux';\nimport store from 'common/store';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}