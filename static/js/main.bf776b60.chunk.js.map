{"version":3,"sources":["actions/slidebar.ts","components/another/Sidebar/Sidebar.styled.ts","components/another/Sidebar/Sidebar.tsx","components/another/HomeIntroduce/HomeIntroduce.styled.ts","components/another/HomeIntroduce/HomeIntroduce.tsx","pages/Home.tsx","templates/ComponentTemplate.styled.ts","templates/ComponentTemplate.tsx","components/another/Intro/global-intro.styled.ts","components/atoms/Button/Button.styled.ts","components/atoms/Button/Button.tsx","components/another/Intro/ButtonIntro.tsx","pages/Button.tsx","components/atoms/Input/Input.styled.ts","components/atoms/Input/Input.tsx","components/another/Intro/InputIntro.tsx","pages/Input.tsx","pages/Checkbox.tsx","pages/DecoHr.tsx","components/atoms/Header/Header.styled.ts","components/atoms/Header/Header.tsx","components/another/Intro/HeaderIntro.tsx","pages/Header.tsx","pages/Hr.tsx","pages/Icon.tsx","pages/LinkButton.tsx","pages/Underline.tsx","pages/Subtitle.tsx","pages/Dropdown.tsx","pages/Card.tsx","pages/EventInfoCard.tsx","pages/StepCard.tsx","pages/NavigationBar.tsx","pages/Footer.tsx","pages/HambergTab.tsx","pages/Slider.tsx","pages/Nstep.tsx","pages/Banner.tsx","pages/Modal.tsx","components/another/Content/Content.styled.ts","components/another/Content/Content.tsx","Router.tsx","common/store.ts","reducers/slidebar.ts","App.tsx","index.tsx"],"names":["SLIDE_OPEN","SLIDE_CLOSE","SidebarContainer","styled","aside","props","show","CloseBtn","span","ImageWrapper","div","ComponentsList","CopyRight","Sidebar","dispatch","useDispatch","isOpen","useSelector","state","slidebar","closeSlideMenu","type","payload","onClick","to","src","process","alt","className","IntroduceContainer","ImageWarpper","IntroduceComment","article","HomeIntroduce","href","target","rel","queryString","require","Home","location","useLocation","history","useHistory","search","query","parse","replace","page","ComponentTemplateContainer","ComponentHeader","h1","ComponentTemplate","header","content","IntroContainer","IntroSmallHeader","h2","IntroParagraph","p","ComponentWrapper","blackBG","css","ControlBox","direction","PropsTable","table","MarginBox","margin","CodeBox","ListBox","ul","StyledButton","button","width","height","disabled","isLoading","Button","children","ButtonIntro","useState","inputs","setInputs","handleInput","event","value","name","alert","min","max","step","onChange","placeholder","readOnlyCss","InputDefault","input","StyledWhiteInput","readOnly","StyledBlackInput","TextInput","required","minLength","maxLength","black","EmailInput","PasswordInput","NumberInput","InputIntro","textWhiteInput","textBlackInput","overviewInput","setOverviewInput","handleOverviewInput","hndleFakeInput","Inupt","Checkbox","DecoHr","HeaderDefulat","color","StyledLargeHeader","StyledSmallHeader","LargeHeader","_color","SmallHeader","HeaderIntro","initialBtnActive","white","brand","point","btnActive","setBtnActive","btnColor","setBtnColor","handleHeaderColor","id","currentTarget","Header","Hr","Icon","LinkButton","Underline","Subtitle","Dropdown","Card","EventInfoCard","StepCard","NavigationBar","Footer","HambergTab","Slider","Nstep","Banner","Modal","ContentContainer","MenuBtn","hidden","Content","AppRouter","basename","exact","path","Input","rootReducer","combineReducers","action","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAKaA,EAAa,aACbC,EAAc,c,42CCJpB,IAAMC,EAAmBC,IAAOC,MAAV,KAaV,SAAAC,GAAK,OAAKA,EAAMC,KAAO,MAAQ,YAIrCC,EAAWJ,IAAOK,KAAV,KAcRC,EAAeN,IAAOO,IAAV,KAUZC,EAAiBR,IAAOO,IAAV,KA2BdE,EAAYT,IAAOO,IAAV,K,QCoCPG,EAlGW,WACxB,IAAMC,EAAWC,cACXC,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,YAE1DC,EAAiB,WACrBN,EFA0C,CAC5CO,KAAMpB,EACNqB,SAAS,KECT,OACE,eAACpB,EAAD,CAAkBI,KAAMU,EAAxB,UACE,cAACT,EAAD,UACE,cAAC,IAAD,CAAgBgB,QAASH,MAE3B,cAACX,EAAD,UACE,cAAC,IAAD,CAAMe,GAAG,IAAID,QAASH,EAAtB,SACE,qBAAKK,IAAKC,2CAA4CC,IAAI,aAG9D,cAAChB,EAAD,UACE,+BACE,oBAAIiB,UAAU,WAAd,mBACA,6BACE,cAAC,IAAD,CAAMJ,GAAG,gBAAgBD,QAASH,EAAlC,sBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,eAAeD,QAASH,EAAjC,qBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,gBAAgBD,QAASH,EAAlC,sBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,kBAAkBD,QAASH,EAApC,wBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,YAAYD,QAASH,EAA9B,kBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,qBAAqBD,QAASH,EAAvC,0BAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,mBAAmBD,QAASH,EAArC,yBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,cAAcD,QAASH,EAAhC,oBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,iBAAiBD,QAASH,EAAnC,sBAEF,uBAEA,oBAAIQ,UAAU,WAAd,uBACA,6BACE,cAAC,IAAD,CAAMJ,GAAG,sBAAsBD,QAASH,EAAxC,wBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,sBAAsBD,QAASH,EAAxC,wBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,kBAAkBD,QAASH,EAApC,oBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,6BAA6BD,QAASH,EAA/C,6BAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,uBAAuBD,QAASH,EAAzC,wBAEF,uBAEA,oBAAIQ,UAAU,WAAd,uBACA,6BACE,cAAC,IAAD,CAAMJ,GAAG,4BAA4BD,QAASH,EAA9C,6BAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,oBAAoBD,QAASH,EAAtC,sBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,yBAAyBD,QAASH,EAA3C,0BAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,oBAAoBD,QAASH,EAAtC,sBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,oBAAoBD,QAASH,EAAtC,qBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,oBAAoBD,QAASH,EAAtC,sBAEF,6BACE,cAAC,IAAD,CAAMI,GAAG,mBAAmBD,QAASH,EAArC,qBAEF,4BAGJ,cAACR,EAAD,sF,qnBCnGC,IAAMiB,EAAqB1B,IAAOO,IAAV,KAIlBoB,EAAe3B,IAAOO,IAAV,KAQZqB,EAAmB5B,IAAO6B,QAAV,KCuCdC,EAlDiB,WAC9B,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,UACE,qBAAKL,IAAKC,4CAA6CC,IAAI,WAE7D,eAACI,EAAD,WACE,2IACA,qIACA,uBACA,uBACA,oQACA,uIACA,6QACA,iNACA,gDAAQ,mBAAGG,KAAK,mJAAyDC,OAAO,SAASC,IAAI,aAArF,iEACR,gDAAQ,mBAAGF,KAAK,gEAAgEC,OAAO,SAASC,IAAI,aAA5F,+EACR,uBACA,uBACA,uCACA,uBACA,kPACA,sTACA,mMACA,gXACA,0OACA,uBACA,uBACA,2CACA,uBACA,4XACA,8LACA,kRACA,4PACA,uBACA,uBACA,2CACA,uBACA,wJACA,0TACA,sRACA,4VACA,6PACA,uBACA,8BC3CFC,EAAcC,EAAQ,IAcbC,EAZQ,WACrB,IAAMC,EAAWC,cACXC,EAAUC,cAEhB,GAAIH,EAASI,OAAQ,CACnB,IAAMC,EAAQR,EAAYS,MAAMN,EAASI,QACzCF,EAAQK,QAAQF,EAAMG,MAGxB,OAAO,cAAC,EAAD,K,sPCbF,IAAMC,EAA6B9C,IAAOO,IAAV,KAI1BwC,EAAkB/C,IAAOgD,GAAV,KCWbC,EAT4B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpD,OACE,eAACL,EAAD,WACE,cAACC,EAAD,UAAkBG,IACjBC,M,opFCVA,IAAMC,GAAiBpD,IAAO6B,QAAV,KAKdwB,GAAmBrD,IAAOsD,GAAV,KAOhBC,GAAiBvD,IAAOwD,EAAV,KAMdC,GAAmBzD,IAAOO,IAAV,KAMzB,SAAAL,GAAK,OACLA,EAAMwD,SACNC,YADA,QAOSC,GAAa5D,IAAOO,IAAV,KAGH,SAAAL,GAAK,OAAIA,EAAM2D,WAAa,YAyCnCC,GAAa9D,IAAO+D,MAAV,KAoCVC,GAAYhE,IAAOO,IAAV,KACH,SAAAL,GAAK,gBAAOA,EAAM+D,OAAb,SAGXC,GAAUlE,IAAOO,IAAV,KAQP4D,GAAUnE,IAAOoE,GAAV,K,qnCC5Hb,IAAMC,GAAerE,IAAOsE,OAAV,MACd,SAAApE,GAAK,OAAIA,EAAMqE,SACd,SAAArE,GAAK,OAAIA,EAAMsE,UAUvB,SAAAtE,GAAK,OACLA,EAAMuE,UACNd,YADA,SAMA,SAAAzD,GAAK,OACLA,EAAMwE,WACNf,YADA,SCLWgB,GALiB,SAAAzE,GAAU,IAChCwE,EAAwBxE,EAAxBwE,UAAWE,EAAa1E,EAAb0E,SACnB,OAAO,cAACP,GAAD,2BAAkBnE,GAAlB,aAA0BwE,EAAY,cAAC,KAAD,IAAqBE,MCoIrDC,GApIe,WAAO,IAAD,EACNC,mBAAS,CACnCP,MAAO,MACPC,OAAQ,KACRrB,QAAS,mCAJuB,mBAC3B4B,EAD2B,KACnBC,EADmB,KAO5BC,EAAc,SAACC,GAAgD,IAAD,EAC1CA,EAAMlD,OAAtBmD,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,KACfJ,EAAU,2BAAKD,GAAN,kBAAeK,EAAOD,MAOjC,OACE,eAAC/B,GAAD,WACE,eAACG,GAAD,iLACwC,uBADxC,oNAE8C,uBAF9C,uTAGkE,IAChE,uBAJF,kQAKyD,uBALzD,yIAM+B,0BAG/B,cAACF,GAAD,uBACA,cAACI,GAAD,UACE,cAAC,GAAD,CAAQc,MAAK,UAAKQ,EAAOR,MAAZ,MAAuBC,OAAM,UAAKO,EAAOP,OAAZ,MAAwBpD,QAjBlD,WACpBiE,MAAM,kEAgBF,SACGN,EAAO5B,YAGZ,eAACS,GAAD,WACE,gDACM,IACJ,uBAAO1C,KAAK,QAAQkE,KAAK,QAAQD,MAAOJ,EAAOR,MAAOe,IAAI,MAAMC,IAAI,MAAMC,KAAK,KAAKC,SAAUR,OAEhG,gDACM,IACJ,uBAAO/D,KAAK,QAAQkE,KAAK,SAASD,MAAOJ,EAAOP,OAAQc,IAAI,KAAKC,IAAI,MAAMC,KAAK,IAAIC,SAAUR,OAEhG,gDACM,IACJ,uBACE/D,KAAK,OACLkE,KAAK,UACLM,YAAY,8CACZP,MAAOJ,EAAO5B,QACdsC,SAAUR,UAIhB,cAACjB,GAAD,CAAWC,OAAQ,KAEnB,cAACZ,GAAD,oBACA,eAACS,GAAD,WACE,gCACE,+BACE,2DACA,2DACA,gEAGJ,kCACE,+BACE,qDACA,8CACA,0BAEF,+BACE,2DACA,8CACA,0BAEF,+BACE,oDACA,8CACA,gCAKN,cAACT,GAAD,oBACA,eAACI,GAAD,WACE,cAAC,GAAD,CAAQc,MAAM,QAAQC,OAAO,OAA7B,uCAGA,cAACR,GAAD,CAAWC,OAAQ,KACnB,cAAC,GAAD,CAAQM,MAAM,QAAQC,OAAO,OAAOC,UAAQ,EAA5C,uCAGA,cAACT,GAAD,CAAWC,OAAQ,KACnB,cAAC,GAAD,CAAQM,MAAM,QAAQC,OAAO,OAAOE,WAAS,EAA7C,uCAGA,cAACV,GAAD,CAAWC,OAAQ,KACnB,cAAC,GAAD,CAAQM,MAAM,QAAQC,OAAO,OAAOC,UAAQ,EAACC,WAAS,EAAtD,uDAIF,cAACV,GAAD,CAAWC,OAAQ,KAEnB,cAACZ,GAAD,qBACA,eAACE,GAAD,sIAC2B,qGAD3B,mJAGE,uBAHF,6KAIqC,gGAJrC,sGAQA,eAACF,GAAD,wBACY,qDAEZ,cAACa,GAAD,UACE,gIAKF,eAACC,GAAD,WACE,4IACA,6IACA,+FACA,gGACA,2HCpIOQ,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmBzB,OAAO,SAASC,QAAS,cAAC,GAAD,O,6tBCHrD,IAAMwC,GAAchC,YAAH,MAQXiC,GAAe5F,IAAO6F,MAAV,MACP,SAAA3F,GAAK,OAAIA,EAAMqE,SAObuB,GAAmB9F,YAAO4F,GAAP5F,CAAH,MASzB,SAAAE,GAAK,OAAIA,EAAM6F,UAAYJ,MAGlBK,GAAmBhG,YAAO4F,GAAP5F,CAAH,MASzB,SAAAE,GAAK,OAAIA,EAAM6F,UAAYJ,MCvBlBM,GAA6B,SAAC,GAWpC,IAVL1B,EAUI,EAVJA,MACAY,EASI,EATJA,MACAC,EAQI,EARJA,KACAM,EAOI,EAPJA,YACAQ,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAL,EAGI,EAHJA,SACAM,EAEI,EAFJA,MACAZ,EACI,EADJA,SAEA,OACE,mCACGY,EACC,cAACL,GAAD,CACE9E,KAAK,OACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,IAGZ,cAACK,GAAD,CACE5E,KAAK,OACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,OAOPa,GAA8B,SAAC,GAWrC,IAVL/B,EAUI,EAVJA,MACAY,EASI,EATJA,MACAC,EAQI,EARJA,KACAM,EAOI,EAPJA,YACAQ,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAL,EAGI,EAHJA,SACAM,EAEI,EAFJA,MACAZ,EACI,EADJA,SAEA,OACE,mCACGY,EACC,cAACL,GAAD,CACE9E,KAAK,QACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,IAGZ,cAACK,GAAD,CACE5E,KAAK,QACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,OAOPc,GAAiC,SAAC,GAWxC,IAVLhC,EAUI,EAVJA,MACAY,EASI,EATJA,MACAC,EAQI,EARJA,KACAM,EAOI,EAPJA,YACAQ,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAL,EAGI,EAHJA,SACAM,EAEI,EAFJA,MACAZ,EACI,EADJA,SAEA,OACE,mCACGY,EACC,cAACL,GAAD,CACE9E,KAAK,WACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,IAGZ,cAACK,GAAD,CACE5E,KAAK,WACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,OAOPe,GAA+B,SAAC,GAWtC,IAVLjC,EAUI,EAVJA,MACAY,EASI,EATJA,MACAC,EAQI,EARJA,KACAM,EAOI,EAPJA,YACAQ,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAL,EAGI,EAHJA,SACAM,EAEI,EAFJA,MACAZ,EACI,EADJA,SAEA,OACE,mCACGY,EACC,cAACL,GAAD,CACE9E,KAAK,SACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,IAGZ,cAACK,GAAD,CACE5E,KAAK,SACLqD,MAAOA,EACPY,MAAOA,EACPC,KAAMA,EACNc,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXL,SAAUA,EACVL,YAAaA,EACbD,SAAUA,OCVLgB,GArKc,WAAO,IAAD,EACS3B,mBAAS,CACjD4B,eAAgB,GAChBC,eAAgB,KAHe,mBAC1BC,EAD0B,KACXC,EADW,OAML/B,mBAAS,CACnCP,MAAO,QAPwB,mBAM1BQ,EAN0B,KAMlBC,EANkB,KAU3B8B,EAAsB,SAAC5B,GAAgD,IAAD,EAClDA,EAAMlD,OAAtBmD,EADkE,EAClEA,MAAOC,EAD2D,EAC3DA,KACfyB,EAAiB,2BAAKD,GAAN,kBAAsBxB,EAAOD,MAQzC4B,EAAiB,SAAC7B,KAIxB,OACE,eAAC9B,GAAD,WACE,eAACG,GAAD,2OACgD,uBADhD,kMAE2C,uBAF3C,2WAIc,uBAJd,6PAQA,cAACF,GAAD,uBACA,eAACI,GAAD,CAAkBC,SAAO,EAAzB,UACE,cAAC,GAAD,CACEa,MAAK,UAAKQ,EAAOR,MAAZ,MACLY,MAAOyB,EAAcF,eACrBtB,KAAK,iBACLM,YAAY,oDACZD,SAAUqB,IAEZ,cAAC9C,GAAD,CAAWC,OAAQ,KACnB,cAAC,GAAD,CACEM,MAAK,UAAKQ,EAAOR,MAAZ,MACLY,MAAOyB,EAAcD,eACrBvB,KAAK,iBACLM,YAAY,oDACZW,OAAK,EACLZ,SAAUqB,OAGd,eAAClD,GAAD,WACE,gDACM,IACJ,uBACE1C,KAAK,QACLkE,KAAK,QACLM,YAAY,YACZP,MAAOJ,EAAOR,MACde,IAAI,MACJC,IAAI,MACJC,KAAK,KACLC,SAjDU,SAACP,GAAgD,IAAD,EAC1CA,EAAMlD,OAAtBmD,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,KACfJ,EAAU,2BAAKD,GAAN,kBAAeK,EAAOD,WAkD3B,cAACnB,GAAD,CAAWC,OAAQ,KACnB,+HACwB,4BAAI2C,EAAcF,oBAE1C,cAAC1C,GAAD,CAAWC,OAAQ,KACnB,+HACwB,4BAAI2C,EAAcD,uBAG5C,cAAC3C,GAAD,CAAWC,OAAQ,KAEnB,cAACZ,GAAD,oBACA,eAACS,GAAD,WACE,gCACE,+BACE,2DACA,2DACA,gEAGJ,kCACE,+BACE,8CACA,8CACA,mFAEF,+BACE,2DACA,sEACA,6HAKN,cAACT,GAAD,oBACA,eAACI,GAAD,CAAkBC,SAAO,EAAzB,+BAEE,cAAC,GAAD,CAAWa,MAAM,QAAQY,MAAM,qBAAMC,KAAK,OAAOK,SAAUsB,IAC3D,cAAC/C,GAAD,CAAWC,OAAQ,KAHrB,qBAKE,cAAC,GAAD,CAAYM,MAAM,QAAQY,MAAM,kBAAkBC,KAAK,QAAQK,SAAUsB,IACzE,cAAC/C,GAAD,CAAWC,OAAQ,KANrB,2BAQE,cAAC,GAAD,CAAeM,MAAM,QAAQY,MAAM,WAAWC,KAAK,WAAWK,SAAUsB,IACxE,cAAC/C,GAAD,CAAWC,OAAQ,KATrB,eAWE,cAAC,GAAD,CAAaM,MAAM,QAAQY,MAAM,KAAKC,KAAK,SAASK,SAAUsB,IAC9D,cAAC/C,GAAD,CAAWC,OAAQ,KAZrB,2BAcE,cAAC,GAAD,CAAWM,MAAM,QAAQY,MAAM,2BAAOC,KAAK,OAAOW,UAAQ,EAACN,SAAUsB,OAEvE,cAAC/C,GAAD,CAAWC,OAAQ,KAEnB,cAACZ,GAAD,sBACA,eAACE,GAAD,gEACY,0IADZ,+GAC8D,uBAD9D,uQAEyD,uBAFzD,qDAGY,uCAHZ,0MAMA,eAACF,GAAD,wBACY,qDAEZ,cAACa,GAAD,UACE,2GAEE,uBACA,uBAHF,cAIgB,uBAJhB,2BAKwC,uBALxC,8BAM2C,uBAN3C,uBAO0B,uBAP1B,qEAQqC,uBARrC,oBASuB,uBATvB,wBAUqC,uBAVrC,0BAWuC,uBAXvC,oBAYuB,uBAZvB,iBAaoB,uBAbpB,mCAcgD,uBAdhD,UAkBF,eAACC,GAAD,WACE,4IACA,2EACA,kIACA,iJACA,gFACA,sFACA,sFACA,mGACA,sGACA,+HCrKO6C,GAJS,WACtB,OAAO,cAAC,EAAD,CAAmB9D,OAAO,QAAQC,QAAS,cAAC,GAAD,OCErC8D,GAJY,WACzB,OAAO,cAAC,EAAD,CAAmB/D,OAAO,WAAWC,QAAS,gCCGxC+D,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmBhE,OAAO,SAASC,QAAS,gC,oUCFrD,IAAMgE,GAAgBnH,IAAOgD,GAAV,MAGR,SAAA9C,GAAK,OAAIA,EAAMkH,SAGbC,GAAoBrH,YAAOmH,GAAPnH,CAAH,MAIjBsH,GAAoBtH,YAAOmH,GAAPnH,CAAH,MCLjBuH,GAA+B,SAAC,GAAyB,IAAvB3C,EAAsB,EAAtBA,SAAUwC,EAAY,EAAZA,MACnDI,EAAiB,GAUrB,MATc,UAAVJ,EACFI,EAAS,UACU,UAAVJ,EACTI,EAAS,OACU,UAAVJ,EACTI,EAAS,UACU,UAAVJ,IACTI,EAAS,WAEJ,cAACH,GAAD,CAAmBD,MAAOI,EAA1B,SAAmC5C,KAG/B6C,GAA+B,SAAC,GAAyB,IAAvB7C,EAAsB,EAAtBA,SAAUwC,EAAY,EAAZA,MACnDI,EAAiB,GAUrB,MATc,UAAVJ,EACFI,EAAS,UACU,UAAVJ,EACTI,EAAS,OACU,UAAVJ,EACTI,EAAS,UACU,UAAVJ,IACTI,EAAS,WAEJ,cAACF,GAAD,CAAmBF,MAAOI,EAA1B,SAAmC5C,KCkG7B8C,GA7Ge,WAC5B,IAAMC,EAA8B,CAClCtB,OAAO,EACPuB,OAAO,EACPC,OAAO,EACPC,OAAO,GALyB,EAQAhD,mBAAQ,2BAAiB6C,GAAjB,IAAmCtB,OAAO,KARlD,mBAQ3B0B,EAR2B,KAQhBC,EARgB,OASFlD,mBAAS,SATP,mBAS3BmD,EAT2B,KASjBC,EATiB,OAUNpD,mBAAS,CACnC3B,QAAS,mCAXuB,mBAU3B4B,EAV2B,KAUnBC,EAVmB,KAc5BmD,EAAoB,SAACjD,GAAgD,IACjEkD,EAAOlD,EAAMmD,cAAbD,GACRJ,EAAa,2BAAKL,GAAN,kBAAyBS,GAAK,KAC1CF,EAAYE,IAQd,OACE,eAAChF,GAAD,WACE,eAACG,GAAD,uSAC+D,uBAD/D,mSAE4D,uBAF5D,qNAMA,cAACF,GAAD,uBACA,eAACI,GAAD,CAAkBC,QAASqE,EAAUH,MAArC,UACE,cAAC,GAAD,CAAaR,MAAOa,EAApB,SAA+BlD,EAAO5B,UACtC,cAAC,GAAD,CAAaiE,MAAOa,EAApB,SAA+BlD,EAAO5B,aAExC,cAACS,GAAD,UACE,uBACE1C,KAAK,OACLkE,KAAK,UACLD,MAAOJ,EAAO5B,QACduC,YAAY,oDACZD,SAxBY,SAACP,GAAgD,IAAD,EAC1CA,EAAMlD,OAAtBmD,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,KACfJ,EAAU,2BAAKD,GAAN,kBAAeK,EAAOD,UAyB7B,eAACvB,GAAD,CAAYC,UAAU,MAAtB,UACE,wBAAQuE,GAAG,QAAQ3G,UAAWsG,EAAU1B,MAAQ,SAAW,GAAIjF,QAAS+G,EAAxE,0BAGA,wBAAQC,GAAG,QAAQ3G,UAAWsG,EAAUH,MAAQ,SAAW,GAAIxG,QAAS+G,EAAxE,gCAGA,wBAAQC,GAAG,QAAQ3G,UAAWsG,EAAUF,MAAQ,SAAW,GAAIzG,QAAS+G,EAAxE,gCAGA,wBAAQC,GAAG,QAAQ3G,UAAWsG,EAAUD,MAAQ,SAAW,GAAI1G,QAAS+G,EAAxE,mCAIF,cAACnE,GAAD,CAAWC,OAAQ,KAEnB,cAACZ,GAAD,oBACA,eAACS,GAAD,WACE,gCACE,+BACE,2DACA,2DACA,gEAGJ,kCACE,+BACE,uBACA,8CACA,4HAEF,+BACE,uBACA,8CACA,kFAKN,cAACT,GAAD,qBACA,eAACE,GAAD,gIAC0B,uBAD1B,gOAEgD,uBAFhD,mNAMA,eAACF,GAAD,wBACY,qDAEZ,cAACa,GAAD,UACE,gEAC0C,uBAD1C,iDAKF,cAACC,GAAD,UACE,8GCpHOmE,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmBpF,OAAO,SAASC,QAAS,cAAC,GAAD,OCEtCoF,GAJM,WACnB,OAAO,cAAC,EAAD,CAAmBrF,OAAO,KAAKC,QAAS,gCCGlCqF,GAJQ,WACrB,OAAO,cAAC,EAAD,CAAmBtF,OAAO,OAAOC,QAAS,gCCGpCsF,GAJc,WAC3B,OAAO,cAAC,EAAD,CAAmBvF,OAAO,aAAaC,QAAS,gCCG1CuF,GAJa,WAC1B,OAAO,cAAC,EAAD,CAAmBxF,OAAO,YAAYC,QAAS,gCCGzCwF,GAJY,WACzB,OAAO,cAAC,EAAD,CAAmBzF,OAAO,WAAWC,QAAS,gCCGxCyF,GAJY,WACzB,OAAO,cAAC,EAAD,CAAmB1F,OAAO,WAAWC,QAAS,gCCGxC0F,GAJQ,WACrB,OAAO,cAAC,EAAD,CAAmB3F,OAAO,OAAOC,QAAS,gCCGpC2F,GAJiB,WAC9B,OAAO,cAAC,EAAD,CAAmB5F,OAAO,gBAAgBC,QAAS,gCCG7C4F,GAJY,WACzB,OAAO,cAAC,EAAD,CAAmB7F,OAAO,WAAWC,QAAS,gCCGxC6F,GAJiB,WAC9B,OAAO,cAAC,EAAD,CAAmB9F,OAAO,gBAAgBC,QAAS,gCCG7C8F,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmB/F,OAAO,SAASC,QAAS,gCCGtC+F,GAJc,WAC3B,OAAO,cAAC,EAAD,CAAmBhG,OAAO,aAAaC,QAAS,gCCG1CgG,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmBjG,OAAO,SAASC,QAAS,gCCGtCiG,GAJS,WACtB,OAAO,cAAC,EAAD,CAAmBlG,OAAO,QAAQC,QAAS,gCCGrCkG,GAJU,WACvB,OAAO,cAAC,EAAD,CAAmBnG,OAAO,SAASC,QAAS,gCCGtCmG,GAJS,WACtB,OAAO,cAAC,EAAD,CAAmBpG,OAAO,QAAQC,QAAS,gC,ueCF7C,IAAMoG,GAAmBvJ,IAAOO,IAAV,MAUhBiJ,GAAUxJ,IAAOK,KAAV,MAUL,SAAAH,GAAK,OAAIA,EAAMuJ,OAAS,OAAS,YCCjCC,GAjBW,SAAC,GAAkB,IAAhB9E,EAAe,EAAfA,SACrBjE,EAAWC,cAMjB,OACE,eAAC2I,GAAD,WACE,cAACC,GAAD,UACE,cAAC,KAAD,CAAQpI,QAPQ,WACpBT,ExCFyC,CAC3CO,KAAMrB,EACNsB,SAAS,SwCQJyD,MCwFQ+E,GA/Ea,kBAC1B,eAAC,IAAD,CAAQC,SAAS,4BAAjB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,kBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,6BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,4BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,yBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,e,SC9FJE,GAAcC,aAAgB,CAClCjJ,SCF0B,WAAyD,IAAxDD,EAAuD,wDAAjCmJ,EAAiC,uCAClF,OAAQA,EAAOhJ,MACb,KAAKrB,EACH,OAAO,EACT,KAAKC,EACH,OAAO,EACT,QACE,OAAOiB,MDAEoJ,GAFDC,aAAYJ,IEIXK,GARO,WACpB,OACE,cAAC,IAAD,CAAUF,MAAOA,GAAjB,SACE,cAAC,GAAD,OCHNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf776b60.chunk.js","sourcesContent":["export interface SlideAction {\n  type: string;\n  payload: boolean;\n}\n\nexport const SLIDE_OPEN = 'SLIDE_OPEN' as const;\nexport const SLIDE_CLOSE = 'SLIDE_CLOSE' as const;\n\nexport const slideOpen = (): SlideAction => ({\n  type: SLIDE_OPEN,\n  payload: true,\n});\n\nexport const slideClose = (): SlideAction => ({\n  type: SLIDE_CLOSE,\n  payload: false,\n});\n","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.aside<{ show?: boolean }>`\n  width: 300px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #e6e6e6;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  overflow: scroll;\n  z-index: 10;\n  transition: all 0.7s ease-in-out;\n\n  @media screen and (max-width: 769px) {\n    margin-left: ${props => (props.show ? '0px' : '-300px')};\n  }\n`;\n\nexport const CloseBtn = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: none;\n  font-size: 1.5rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: inline;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  padding: 30px 0;\n  text-align: center;\n\n  img {\n    width: 70%;\n  }\n`;\n\nexport const ComponentsList = styled.div`\n  ul {\n    padding: 20px;\n  }\n\n  ul .subtitle {\n    margin-bottom: 7px;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: #4284bd;\n  }\n\n  ul li {\n    margin-left: 20px;\n    padding: 5px 0;\n  }\n\n  ul a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  ul a:hover {\n    color: #499cd3;\n  }\n`;\n\nexport const CopyRight = styled.div`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 0.7rem;\n  color: #a6a6a6;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'common/store';\nimport { slideClose } from 'actions/slidebar';\nimport { SidebarContainer, CloseBtn, ImageWrapper, ComponentsList, CopyRight } from './Sidebar.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst Sidebar: React.FC = () => {\n  const dispatch = useDispatch();\n  const isOpen: boolean = useSelector((state: RootState) => state.slidebar);\n\n  const closeSlideMenu = () => {\n    dispatch(slideClose());\n  };\n\n  return (\n    <SidebarContainer show={isOpen}>\n      <CloseBtn>\n        <AiOutlineClose onClick={closeSlideMenu} />\n      </CloseBtn>\n      <ImageWrapper>\n        <Link to=\"/\" onClick={closeSlideMenu}>\n          <img src={process.env.PUBLIC_URL + '/asset/logo.png'} alt=\"logo\" />\n        </Link>\n      </ImageWrapper>\n      <ComponentsList>\n        <ul>\n          <h1 className=\"subtitle\">atoms</h1>\n          <li>\n            <Link to=\"/atoms/button\" onClick={closeSlideMenu}>button</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/input\" onClick={closeSlideMenu}>input</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/header\" onClick={closeSlideMenu}>header</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/checkbox\" onClick={closeSlideMenu}>checkbox</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/hr\" onClick={closeSlideMenu}>hr</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/link-button\" onClick={closeSlideMenu}>linkButton</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/underline\" onClick={closeSlideMenu}>underline</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/icon\" onClick={closeSlideMenu}>icon</Link>\n          </li>\n          <li>\n            <Link to=\"/atoms/deco-hr\" onClick={closeSlideMenu}>decoHr</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">molecules</h1>\n          <li>\n            <Link to=\"/molecules/subtitle\" onClick={closeSlideMenu}>subtitle</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/dropdown\" onClick={closeSlideMenu}>dropdown</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/card\" onClick={closeSlideMenu}>card</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/event-info-card\" onClick={closeSlideMenu}>eventInfoCard</Link>\n          </li>\n          <li>\n            <Link to=\"/molecules/step-card\" onClick={closeSlideMenu}>stepCard</Link>\n          </li>\n          <br />\n\n          <h1 className=\"subtitle\">organisms</h1>\n          <li>\n            <Link to=\"/organisms/navigation-bar\" onClick={closeSlideMenu}>navigationBar</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/footer\" onClick={closeSlideMenu}>footer</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/hamberg-tab\" onClick={closeSlideMenu}>hambergTab</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/slider\" onClick={closeSlideMenu}>slider</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/n-step\" onClick={closeSlideMenu}>Nstep</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/banner\" onClick={closeSlideMenu}>banner</Link>\n          </li>\n          <li>\n            <Link to=\"/organisms/modal\" onClick={closeSlideMenu}>modal</Link>\n          </li>\n          <br />\n        </ul>\n      </ComponentsList>\n      <CopyRight>copyright &copy; All Right Reserved by 수시레시피</CopyRight>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const IntroduceContainer = styled.div`\n  padding: 50px;\n`;\n\nexport const ImageWarpper = styled.div`\n  margin: 30px 0;\n  text-align: center;\n  img {\n    width: 300px;\n  }\n`;\n\nexport const IntroduceComment = styled.article`\n  text-align: left;\n\n  h1 {\n    line-height: 1.4;\n    font-size: 2rem;\n    color: #374553;\n  }\n\n  h2 {\n    font-weight: 600;\n    font-size: 1.5rem;\n    color: #499cd3;\n  }\n\n  p {\n    line-height: 1.5;\n    color: #374553;\n  }\n  \n  a {\n    color: #9a9a9a;\n  }\n\n  a:hover {\n    font-weight: 600;\n  }\n`;\n","import React from 'react';\nimport { IntroduceContainer, ImageWarpper, IntroduceComment } from './HomeIntroduce.styled';\n\nconst HomeIntroduce: React.FC = () => {\n  return (\n    <IntroduceContainer>\n      <ImageWarpper>\n        <img src={process.env.PUBLIC_URL + '/asset/logo2.png'} alt=\"logo\" />\n      </ImageWarpper>\n      <IntroduceComment>\n        <h1>안녕하세요 디자이너팀과 개발팀을 위한</h1>\n        <h1>수시레시피 디자인 시스템 문서입니다</h1>\n        <br />\n        <br />\n        <p>저희는 가장 합리적인 업무 체계를 위하여 고민했고, 디자어너와 개발자가 가장 효율적인</p>\n        <p>업무를 할 수 있는 시스템을 찾았습니다.</p>\n        <p>바로 'atomic design' 입니다. 저희는 리액트로 개발하기에 재사용 가능한 컴포넌트를 활용하고자 했고</p>\n        <p>여러 원자로 나누어서 그것들을 합쳐가며 디자인을 하기로 했습니다.</p>\n        <p>참고 - <a href=\"https://velog.io/@thsoon/쓸때없이-고퀄인-투두리스트-만들기-FE-2.-뷰-설계\" target=\"_blank\" rel=\"noreferrer\">Todo List로 atomic design 배우기</a></p>\n        <p>참고 - <a href=\"https://tech.socarcorp.kr/design/2020/07/31/component-01.html\" target=\"_blank\" rel=\"noreferrer\">SOCAR 컴포넌트 디자인 방식</a></p>\n        <br />\n        <br />\n        <h2>atoms</h2>\n        <br />\n        <p>atoms는 원자입니다. 디자인 시스템의 가장 기초가되는 컴포넌트라고 할 수 있습니다. </p>\n        <p>atoms에는 개발 단계에서 가장 기초가되는 HTML Tag를 기준으로 합니다. 보통 예를 들면 'input tag', 'button tag'를 예로 들 수 있겠죠?</p>\n        <p>이런 atom들을 가지고 미리 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>디자이너들은 다양한 종류의 컴포넌트 디자인을, 개발자는 컴포넌트가 가지능 기능, 즉 React에서는 Props같은 것 들을 설계할 수 있습니다.</p>\n        <p>다양하게 만들어진 atoms를 가지고 우리는 좀 더 큰 단위인 molecules(분자)를 만들겁니다.</p>\n        <br />\n        <br />\n        <h2>molecules</h2>\n        <br />\n        <p>분자는 원자들이 결합한 결과물로 나타납니다. 우리는 React를 쓰기 때문에 다양한 원자들을 결합시킨 분자를 컴포넌트화 시킬 수 있습니다.</p>\n        <p>분자 또한 마찬가지로 디자인과 컴포넌트 기능을 설계합니다.</p>\n        <p>최대한 기존의 설계된 원자를 재사용하는 것을 목표로 하고 필요에 의해 새로 만들기도 합니다.</p>\n        <p>당연한 이야기지만 분자들을 합쳐 페이지 템플릿의 주축이 될 organisms(유기체)를 만듭니다.</p>\n        <br />\n        <br />\n        <h2>organisms</h2>\n        <br />\n        <p>컴포넌트 단위의 최종 결정물인 유기체입니다.</p>\n        <p>이 컴포넌트들을 간단한 예로 들면 웹의 header나 footer, hambergbar, article등 페이지 템플릿에 직접적으로 들어간 요소들 입니다.</p>\n        <p>우리는 설계를 하면서 페이지에 들어갈 모든 유기체를 만드는 것은 불가능하다고 생각했습니다.</p>\n        <p>하지만 자주쓰이는 header나 footer같은 경우는 재사용될 가능성이 크기 때문에 이러한 컴포넌트는 미리 설계를 해놓기로 했습니다.</p>\n        <p>물론 기능이 많이 들어가는 컴포넌트도 로직의 분리를 위해서 미리 설계해놓았습니다.</p>\n        <br />\n        <br />\n      </IntroduceComment>\n    </IntroduceContainer>\n  );\n};\n\nexport default HomeIntroduce;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport HomeIntroduce from 'components/another/HomeIntroduce/HomeIntroduce';\n\nconst queryString = require('query-string');\n\nconst Home: React.FC = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  if (location.search) {\n    const query = queryString.parse(location.search);\n    history.replace(query.page);\n  }\n\n  return <HomeIntroduce />;\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const ComponentTemplateContainer = styled.div`\n  padding: 50px;\n`;\n\nexport const ComponentHeader = styled.h1`\n  margin-bottom: 20px;\n  font-weight: 600;\n  font-size: 1.8rem;\n  color: #4284bd;\n`;\n","import React from 'react';\nimport { ComponentTemplateContainer, ComponentHeader } from './ComponentTemplate.styled';\n\ninterface props {\n  header: string;\n  content: JSX.Element;\n}\n\nconst ComponentTemplate: React.FC<props> = ({ header, content }) => {\n  return (\n    <ComponentTemplateContainer>\n      <ComponentHeader>{header}</ComponentHeader>\n      {content}\n    </ComponentTemplateContainer>\n  );\n};\n\nexport default ComponentTemplate;\n","import styled, { css } from 'styled-components';\n\nexport const IntroContainer = styled.article`\n  margin: 30px 0;\n  text-align: left;\n`;\n\nexport const IntroSmallHeader = styled.h2`\n  margin-bottom: 30px;\n  font-weight: 500;\n  font-size: 1.5rem;\n  color: #374553;\n`;\n\nexport const IntroParagraph = styled.p`\n  margin-bottom: 70px;\n  line-height: 1.5;\n  color: #374553;\n`;\n\nexport const ComponentWrapper = styled.div<{ blackBG?: boolean }>`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  ${props =>\n    props.blackBG &&\n    css`\n      background-color: rgba(0, 0, 0, 0.7);\n      color: #fff;\n    `}\n`;\n\nexport const ControlBox = styled.div<{ direction?: string }>`\n  padding: 20px;\n  display: flex;\n  flex-direction: ${props => props.direction || 'column'};\n  justify-content: center;\n  align-items: center;\n  color: #374553;\n\n  input {\n    width: 150px;\n    margin: 10px 0;\n    margin-left: 15px;\n    padding: 7px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: inset 0px 1px 3px 0px rgba(0, 0, 0, 0.08);\n    background-color: #fafafa;\n    font-size: 0.8rem;\n    color: #374553;\n  }\n\n  input:focus {\n    outline: none;\n    background-color: #f6f6f6;\n  }\n\n  button {\n    width: 140px;\n    height: 40px;\n    margin: 20px;\n    border: 3px solid #4284bd;\n    border-radius: 10px;\n    background-color: transparent;\n    font-size: 0.9rem;\n    color: #4284bd;\n    cursor: pointer;\n  }\n\n  button.active {\n    background-color: #4284bd;\n    color: #fff;\n  }\n`;\n\nexport const PropsTable = styled.table`\n  width: 100%;\n  margin: 20px 0;\n  margin-bottom: 100px;\n  text-align: center;\n  /* box-shadow: 0 0 20px rgba(0, 0, 0, 0.15); */\n\n  td,\n  th {\n    width: 33%;\n    padding: 12px 15px;\n    color: #374553;\n  }\n\n  th {\n    background-color: #499cd3;\n    color: #fff;\n  }\n\n  th:first-child {\n    border-radius: 10px 0 0 0;\n  }\n\n  th:last-child {\n    border-radius: 0 10px 0 0;\n  }\n\n  tr {\n    border-bottom: 1px solid #ddd;\n  }\n\n  tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n`;\n\nexport const MarginBox = styled.div<{ margin: number }>`\n  margin-bottom: ${props => `${props.margin}px`};\n`;\n\nexport const CodeBox = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n  border-radius: 15px;\n  background-color: #f6f6f6;\n  line-height: 1.3;\n`;\n\nexport const ListBox = styled.ul`\n  width: 100%;\n  margin: 20px 0;\n  padding-left: 20px;\n  list-style-type: disc;\n\n  li {\n    padding: 15px 0;\n    color: #374553;\n  }\n`;","import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button<{ width: string; height: string; disabled?: boolean; isLoading?: boolean }>`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  border: none;\n  border-radius: 10px;\n  background-color: #e2ce38;\n  box-shadow: 0 2px 4px 0 #eaeaea;\n  font-size: 1.1rem;\n  color: #fff;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n\n  ${props =>\n    props.disabled &&\n    css`\n      opacity: 0.6;\n      cursor: not-allowed;\n    `}\n\n  ${props =>\n    props.isLoading &&\n    css`\n      cursor: not-allowed;\n    `}\n\n  &:hover {\n    transform: translateZ(0) scale(0.97);\n  }\n\n  svg {\n    font-size: 1.7rem;\n\n    -webkit-animation: spin 3s linear infinite;\n    -moz-animation: spin 3s linear infinite;\n    animation: spin 3s linear infinite;\n    @-moz-keyframes spin {\n      100% {\n        -moz-transform: rotate(360deg);\n      }\n    }\n    @-webkit-keyframes spin {\n      100% {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    @keyframes spin {\n      100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { BiLoaderCircle } from 'react-icons/bi';\nimport { StyledButton } from './Button.styled';\n\ninterface props {\n  width: string;\n  height: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  onClick?: (event?: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Button: React.FC<props> = props => {\n  const { isLoading, children } = props;\n  return <StyledButton {...props}>{isLoading ? <BiLoaderCircle /> : children}</StyledButton>;\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroSmallHeader,\n  IntroParagraph,\n  ComponentWrapper,\n  ControlBox,\n  PropsTable,\n  MarginBox,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport Button from 'components/atoms/Button/Button';\n\nconst ButtonIntro: React.FC = () => {\n  const [inputs, setInputs] = useState({\n    width: '250',\n    height: '50',\n    content: '안녕하세요',\n  });\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const onButtonClick = () => {\n    alert('버튼을 클릭하셨습니다');\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        버튼은 atoms에 있어서 가장 중요하고 기본이되는 컴포넌트입니다. <br />\n        사실 그만큼 기능들도 많이 들어가있고 복잡하게 고려해야 할 요소들이 많습니다. <br />\n        우선 우리는 디자인팀과 개발팀의 협의로 영업팀의 요구에 맞는 결과물을 위하여 유연한 컴포넌트로 만들기로 했습니다.{' '}\n        <br />\n        버튼은 아주 많이 쓰이는 컴포넌트인 만큼 변화되는 부분도 많고 대처해야 할 부분이 많을 것입니다. <br />\n        그래서 저희는 이 이슈에 맞춰 설계하게 되었습니다. <br />\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper>\n        <Button width={`${inputs.width}px`} height={`${inputs.height}px`} onClick={onButtonClick}>\n          {inputs.content}\n        </Button>\n      </ComponentWrapper>\n      <ControlBox>\n        <div>\n          넓이:{' '}\n          <input type=\"range\" name=\"width\" value={inputs.width} min=\"100\" max=\"500\" step=\"10\" onChange={handleInput} />\n        </div>\n        <div>\n          높이:{' '}\n          <input type=\"range\" name=\"height\" value={inputs.height} min=\"50\" max=\"150\" step=\"5\" onChange={handleInput} />\n        </div>\n        <div>\n          내용:{' '}\n          <input\n            type=\"text\"\n            name=\"content\"\n            placeholder=\"내용을 써주세요\"\n            value={inputs.content}\n            onChange={handleInput}\n          />\n        </div>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>배경 색</td>\n            <td>넓이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>글자 크기</td>\n            <td>높이</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>그림자</td>\n            <td>내용</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper>\n        <Button width=\"200px\" height=\"60px\">\n          기본 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" disabled>\n          막힌 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" isLoading>\n          로딩 버튼\n        </Button>\n        <MarginBox margin={25} />\n        <Button width=\"200px\" height=\"60px\" disabled isLoading>\n          막힌 로딩 버튼\n        </Button>\n      </ComponentWrapper>\n      <MarginBox margin={80} />\n\n      <IntroSmallHeader>Waning</IntroSmallHeader>\n      <IntroParagraph>\n        주의할 점은 디자인의 통일성을 위해 배경색은 <b>옐로우계열의 컬러로 통일</b>하였다는 것과 폰트와 색깔또한\n        통일하였다는 것입니다.\n        <br />\n        또한 다양한 기획의견을 반영하여 넓이와 높이를 가변요소로 두어 <b>여러 크기의 버튼을 제작</b>할 수 있다는 것을\n        염두하여야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;Button width=&#123;\"150px\"&#125; height=&#123;\"70px\"&#125; disabled isLoading\n          onClick=&#123;clickMethod&#125;&gt;&lt;/Button&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>width: string (버튼의 넓이 '%, px 등등 여러단위 가능')</li>\n        <li>height: string (버튼의 높이 '%, px 등등 여러단위 가능')</li>\n        <li>disabled?: boolean - (disable버튼 활성화)</li>\n        <li>isLoading?: boolean - (loading버튼 활성화)</li>\n        <li>onClick?: (event?: React.MouseEvent&lt;HTMLElement&gt;) =&gt; void - (onClick 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default ButtonIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport ButtonIntro from 'components/another/Intro/ButtonIntro';\n\nconst Button: React.FC = () => {\n  return <ComponentTemplate header=\"Button\" content={<ButtonIntro />} />;\n};\n\nexport default Button;\n","import styled, { css } from 'styled-components';\n\nconst readOnlyCss = css`\n  opacity: 0.6;\n\n  &:focus {\n    border: 3px solid transparent;\n  }\n`;\n\nconst InputDefault = styled.input<{ width: string, readOnly?: boolean }>`\n  width: ${props => props.width};\n  padding: 10px;\n  border: 3px solid transparent;\n  border-radius: 10px;\n  font-size: 0.85rem;\n`;\n\nexport const StyledWhiteInput = styled(InputDefault)`\n  background-color: #fff;\n  color: #131313;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #e2ce38;\n  }\n\n  ${props => props.readOnly && readOnlyCss}\n`;\n\nexport const StyledBlackInput = styled(InputDefault)`\n  background-color: #818181;\n  color: #fff;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #6b6b6b;\n  }\n\n  ${props => props.readOnly && readOnlyCss}\n`;\n","import React from 'react';\nimport { StyledWhiteInput, StyledBlackInput } from './Input.styled';\n\ninterface props {\n  width: string;\n  value: string;\n  name: string;\n  placeholder?: string;\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  readOnly?: boolean;\n  black?: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const TextInput: React.FC<props> = ({\n  width,\n  value,\n  name,\n  placeholder,\n  required,\n  minLength,\n  maxLength,\n  readOnly,\n  black,\n  onChange,\n}) => {\n  return (\n    <>\n      {black ? (\n        <StyledBlackInput\n          type=\"text\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      ) : (\n        <StyledWhiteInput\n          type=\"text\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport const EmailInput: React.FC<props> = ({\n  width,\n  value,\n  name,\n  placeholder,\n  required,\n  minLength,\n  maxLength,\n  readOnly,\n  black,\n  onChange,\n}) => {\n  return (\n    <>\n      {black ? (\n        <StyledBlackInput\n          type=\"email\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      ) : (\n        <StyledWhiteInput\n          type=\"email\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport const PasswordInput: React.FC<props> = ({\n  width,\n  value,\n  name,\n  placeholder,\n  required,\n  minLength,\n  maxLength,\n  readOnly,\n  black,\n  onChange,\n}) => {\n  return (\n    <>\n      {black ? (\n        <StyledBlackInput\n          type=\"password\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      ) : (\n        <StyledWhiteInput\n          type=\"password\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport const NumberInput: React.FC<props> = ({\n  width,\n  value,\n  name,\n  placeholder,\n  required,\n  minLength,\n  maxLength,\n  readOnly,\n  black,\n  onChange,\n}) => {\n  return (\n    <>\n      {black ? (\n        <StyledBlackInput\n          type=\"number\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      ) : (\n        <StyledWhiteInput\n          type=\"number\"\n          width={width}\n          value={value}\n          name={name}\n          required={required}\n          minLength={minLength}\n          maxLength={maxLength}\n          readOnly={readOnly}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  MarginBox,\n  ControlBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport { TextInput, EmailInput, PasswordInput, NumberInput } from 'components/atoms/Input/Input';\n\nconst InputIntro: React.FC = () => {\n  const [overviewInput, setOverviewInput] = useState({\n    textWhiteInput: '',\n    textBlackInput: '',\n  });\n\n  const [inputs, setInputs] = useState({\n    width: '200',\n  });\n\n  const handleOverviewInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setOverviewInput({ ...overviewInput, [name]: value });\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const hndleFakeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    return;\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        인풋은 고객의 정보를 담고 전달해주는 컴포넌트로 매우 중요하고 로직이 복잡합니다. <br />\n        많은 기능들이 들어간 만큼 문서를 깊이 보고 이해하는 것을 추천드립니다. <br />\n        인풋은 다양한 상황에서 디자인의 변화가 일어나므로 다양한 디자인을 제작해야 했습니다. 그에 따라 개발도 다양하게\n        이루어져야 했습니다. <br />\n        그래서 우리는 텍스트, 이메일, 비밀번호 등 다양한 형태의 인풋컴포넌트를 제작하기로 했습니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper blackBG>\n        <TextInput\n          width={`${inputs.width}px`}\n          value={overviewInput.textWhiteInput}\n          name=\"textWhiteInput\"\n          placeholder=\"값을 입력해주세요\"\n          onChange={handleOverviewInput}\n        />\n        <MarginBox margin={20} />\n        <TextInput\n          width={`${inputs.width}px`}\n          value={overviewInput.textBlackInput}\n          name=\"textBlackInput\"\n          placeholder=\"값을 입력해주세요\"\n          black\n          onChange={handleOverviewInput}\n        />\n      </ComponentWrapper>\n      <ControlBox>\n        <div>\n          넓이:{' '}\n          <input\n            type=\"range\"\n            name=\"width\"\n            placeholder=\"ex) 150px\"\n            value={inputs.width}\n            min=\"100\"\n            max=\"500\"\n            step=\"10\"\n            onChange={handleInput}\n          />\n        </div>\n        <MarginBox margin={20} />\n        <div>\n          현재 변수에 저장되는 인풋 값(하양): <b>{overviewInput.textWhiteInput}</b>\n        </div>\n        <MarginBox margin={20} />\n        <div>\n          현재 변수에 저장되는 인풋 값(검정): <b>{overviewInput.textBlackInput}</b>\n        </div>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>높이</td>\n            <td>넓이</td>\n            <td>배경색(하양, 검정)</td>\n          </tr>\n          <tr>\n            <td>글자 크기</td>\n            <td>플레이스홀더</td>\n            <td>인풋 타입(텍스트, 이메일, 등등...)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Types</IntroSmallHeader>\n      <ComponentWrapper blackBG>\n        텍스트\n        <TextInput width=\"200px\" value=\"텍스트\" name=\"text\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        이메일\n        <EmailInput width=\"200px\" value=\"email@email.com\" name=\"email\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        비밀번호\n        <PasswordInput width=\"200px\" value=\"password\" name=\"password\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        숫자\n        <NumberInput width=\"200px\" value=\"15\" name=\"number\" onChange={hndleFakeInput} />\n        <MarginBox margin={20} />\n        읽기전용\n        <TextInput width=\"200px\" value=\"읽기전용\" name=\"text\" readOnly onChange={hndleFakeInput} />\n      </ComponentWrapper>\n      <MarginBox margin={60} />\n\n      <IntroSmallHeader>Warning</IntroSmallHeader>\n      <IntroParagraph>\n        주의해야할 부분은 <b>넓이는 가변요소이지만 높이는 고정요소</b>이기 때문에 디자인할 때 주의해야합니다. <br />\n        또한 인풋 타입이 여러개이므로 상황에 맞는 인풋을 골라 적절하게 사용하는 것은 굉장히 중요합니다. <br />\n        개발자들은 인풋의 <b>'name'</b>에 신경써서 디바이스의 자동완성 기능을 활용할 수 있도록 신경써야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;TextInput /&gt;&nbsp;&lt;EmailInput /&gt;&nbsp;&lt;PasswordInput /&gt;&nbsp;&lt;NumberInput /&gt;\n          <br />\n          <br />\n          &lt;TextInput <br />\n          &nbsp;&nbsp;width=&#123;\"200px\"&#125; <br />\n          &nbsp;&nbsp;value=&#123;inputState&#125; <br />\n          &nbsp;&nbsp;name=\"text\" <br />\n          &nbsp;&nbsp;placeholder=\"값을 입력하세요\" <br />\n          &nbsp;&nbsp;required <br />\n          &nbsp;&nbsp;miLength=&#123;5&#125; <br />\n          &nbsp;&nbsp;maxLength=&#123;10&#125; <br />\n          &nbsp;&nbsp;readonly <br />\n          &nbsp;&nbsp;black <br />\n          &nbsp;&nbsp;onChange=&#123;handleMethod&#125; <br />\n          /&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>width: string (인풋의 넓이 '%, px 등등 여러단위 가능')</li>\n        <li>value: string (인풋의 값)</li>\n        <li>name: string ('email, phone, birthday' 등으로 자동완성 가능)</li>\n        <li>placeholder?: string (인풋이 비어있을 때 보여지는 글자)</li>\n        <li>required?: boolean (필수 입력)</li>\n        <li>minLength?: number (최소 글자수)</li>\n        <li>maxLength?: number (최대 글자수)</li>\n        <li>readOnly?: boolean (읽기 전용 활성화)</li>\n        <li>black?: boolean (검정테마 인풋 사용)</li>\n        <li>onChange: (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void (onChange 함수)</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default InputIntro;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\nimport InputIntro from 'components/another/Intro/InputIntro';\n\nconst Inupt: React.FC = () => {\n  return <ComponentTemplate header=\"Input\" content={<InputIntro></InputIntro>} />;\n};\n\nexport default Inupt;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Checkbox: React.FC = () => {\n  return <ComponentTemplate header=\"Checkbox\" content={<></>} />;\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst DecoHr: React.FC = () => {\n  return <ComponentTemplate header=\"DecoHr\" content={<></>} />;\n};\n\nexport default DecoHr;\n","import styled from 'styled-components';\n\nconst HeaderDefulat = styled.h1<{color?: string}>`\n  margin-bottom: 20px;\n  font-weight: 600;\n  color: ${props => props.color}\n`;\n\nexport const StyledLargeHeader = styled(HeaderDefulat)`\n  font-size: 2.5rem;\n`;\n\nexport const StyledSmallHeader = styled(HeaderDefulat)`\n  font-size: 1.875rem;\n`;\n","import React from 'react';\nimport { StyledLargeHeader, StyledSmallHeader } from './Header.styled';\n\ninterface props {\n  color?: string;\n}\n\nexport const LargeHeader: React.FC<props> = ({ children, color }) => {\n  let _color: string = '';\n  if (color === 'black') {\n    _color = '#1a1a1a';\n  } else if (color === 'white') {\n    _color = '#fff';\n  } else if (color === 'brand') {\n    _color = '#4284bd';\n  } else if (color === 'point') {\n    _color = '#e2ce38';\n  }\n  return <StyledLargeHeader color={_color}>{children}</StyledLargeHeader>;\n};\n\nexport const SmallHeader: React.FC<props> = ({ children, color }) => {\n  let _color: string = '';\n  if (color === 'black') {\n    _color = '#1a1a1a';\n  } else if (color === 'white') {\n    _color = '#fff';\n  } else if (color === 'brand') {\n    _color = '#4284bd';\n  } else if (color === 'point') {\n    _color = '#e2ce38';\n  }\n  return <StyledSmallHeader color={_color}>{children}</StyledSmallHeader>;\n};\n","import React, { useState } from 'react';\nimport {\n  IntroContainer,\n  IntroParagraph,\n  IntroSmallHeader,\n  ComponentWrapper,\n  ControlBox,\n  MarginBox,\n  PropsTable,\n  CodeBox,\n  ListBox,\n} from './global-intro.styled';\nimport { LargeHeader, SmallHeader } from 'components/atoms/Header/Header';\n\ninterface BtnActive {\n  black: boolean;\n  white: boolean;\n  brand: boolean;\n  point: boolean;\n}\n\nconst HeaderIntro: React.FC = () => {\n  const initialBtnActive: BtnActive = {\n    black: false,\n    white: false,\n    brand: false,\n    point: false,\n  };\n\n  const [btnActive, setBtnActive] = useState<BtnActive>({ ...initialBtnActive, black: true });\n  const [btnColor, setBtnColor] = useState('black');\n  const [inputs, setInputs] = useState({\n    content: '안녕하세요',\n  });\n\n  const handleHeaderColor = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.currentTarget;\n    setBtnActive({ ...initialBtnActive, [id]: true });\n    setBtnColor(id);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  return (\n    <IntroContainer>\n      <IntroParagraph>\n        헤더는 가장 심플한 컴포넌트입니다. 굳이 컴포넌트화 시키지않고 단순히 HTML로 작업해도 된다고 생각하겠지만 <br />\n        충분히 재사용될 가능성이 많고 원활한 디자인 시스템을 적용하려면 컴포넌트화를 해야한다고 생각하였습니다. <br />\n        따라서 개발쪽으로 많은 기능은 들어가있지않고 디자인 요소들의 비중이 큽니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>Overview</IntroSmallHeader>\n      <ComponentWrapper blackBG={btnActive.white}>\n        <LargeHeader color={btnColor}>{inputs.content}</LargeHeader>\n        <SmallHeader color={btnColor}>{inputs.content}</SmallHeader>\n      </ComponentWrapper>\n      <ControlBox>\n        <input\n          type=\"text\"\n          name=\"content\"\n          value={inputs.content}\n          placeholder=\"값을 입력해주세요\"\n          onChange={handleInput}\n        />\n      </ControlBox>\n      <ControlBox direction=\"row\">\n        <button id=\"black\" className={btnActive.black ? 'active' : ''} onClick={handleHeaderColor}>\n          블랙\n        </button>\n        <button id=\"white\" className={btnActive.white ? 'active' : ''} onClick={handleHeaderColor}>\n          화이트\n        </button>\n        <button id=\"brand\" className={btnActive.brand ? 'active' : ''} onClick={handleHeaderColor}>\n          브랜드\n        </button>\n        <button id=\"point\" className={btnActive.point ? 'active' : ''} onClick={handleHeaderColor}>\n          포인트\n        </button>\n      </ControlBox>\n      <MarginBox margin={40} />\n\n      <IntroSmallHeader>Props</IntroSmallHeader>\n      <PropsTable>\n        <thead>\n          <tr>\n            <th>고정 요소</th>\n            <th>가변 요소</th>\n            <th>지정 요소</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>내용</td>\n            <td>글자색 (검정, 하양, 브랜드, 포인트)</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>폰트</td>\n            <td>글자크기 (large, small)</td>\n          </tr>\n        </tbody>\n      </PropsTable>\n\n      <IntroSmallHeader>Waning</IntroSmallHeader>\n      <IntroParagraph>\n        헤더에서는 딱히 주의해야할 점은 없습니다. <br />\n        다만 지정요소로 크기가 정해져 있기때문에 상황에 맞게 적절히 사용해주어야 합니다. <br />\n        그리고 개발단계에서 컬러를 지정할때 미리 정해놓은 enum을 사용해주어야 합니다.\n      </IntroParagraph>\n\n      <IntroSmallHeader>\n        Refference<small>(for Develop)</small>\n      </IntroSmallHeader>\n      <CodeBox>\n        <code>\n          &lt;LargeHeader&gt;&lt;/LargeHeader&gt; <br />\n          &lt;SmallHeader color=&quot;brand&quot;&gt;&lt;/SmallHeader&gt;\n        </code>\n      </CodeBox>\n      <ListBox>\n        <li>color?: string (글자색 'black', 'white', 'brand', 'point')</li>\n      </ListBox>\n    </IntroContainer>\n  );\n};\n\nexport default HeaderIntro;\n","import React from 'react';\nimport HeaderIntro from 'components/another/Intro/HeaderIntro';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Header: React.FC = () => {\n  return <ComponentTemplate header=\"Header\" content={<HeaderIntro />} />;\n};\n\nexport default Header;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Hr: React.FC = () => {\n  return <ComponentTemplate header=\"Hr\" content={<></>} />;\n};\n\nexport default Hr;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Icon: React.FC = () => {\n  return <ComponentTemplate header=\"Icon\" content={<></>} />;\n};\n\nexport default Icon;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst LinkButton: React.FC = () => {\n  return <ComponentTemplate header=\"Linkbutton\" content={<></>} />;\n};\n\nexport default LinkButton;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Underline: React.FC = () => {\n  return <ComponentTemplate header=\"Underline\" content={<></>} />;\n};\n\nexport default Underline;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Subtitle: React.FC = () => {\n  return <ComponentTemplate header=\"Subtitle\" content={<></>} />;\n};\n\nexport default Subtitle;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Dropdown: React.FC = () => {\n  return <ComponentTemplate header=\"Dropdown\" content={<></>} />;\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Card: React.FC = () => {\n  return <ComponentTemplate header=\"Card\" content={<></>} />;\n};\n\nexport default Card;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst EventInfoCard: React.FC = () => {\n  return <ComponentTemplate header=\"EventInfoCard\" content={<></>} />;\n};\n\nexport default EventInfoCard;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst StepCard: React.FC = () => {\n  return <ComponentTemplate header=\"StepCard\" content={<></>} />;\n};\n\nexport default StepCard;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst NavigationBar: React.FC = () => {\n  return <ComponentTemplate header=\"NavigationBar\" content={<></>} />;\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Footer: React.FC = () => {\n  return <ComponentTemplate header=\"Footer\" content={<></>} />;\n};\n\nexport default Footer;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst HambergTab: React.FC = () => {\n  return <ComponentTemplate header=\"HambergTab\" content={<></>} />;\n};\n\nexport default HambergTab;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Slider: React.FC = () => {\n  return <ComponentTemplate header=\"Slider\" content={<></>} />;\n};\n\nexport default Slider;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Nstep: React.FC = () => {\n  return <ComponentTemplate header=\"Nstep\" content={<></>} />;\n};\n\nexport default Nstep;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Banner: React.FC = () => {\n  return <ComponentTemplate header=\"Banner\" content={<></>} />;\n};\n\nexport default Banner;\n","import React from 'react';\nimport ComponentTemplate from 'templates/ComponentTemplate';\n\nconst Modal: React.FC = () => {\n  return <ComponentTemplate header=\"Modal\" content={<></>} />;\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  width: calc(100vw - 300px);\n  margin-left: 300px;\n\n  @media screen and (max-width: 769px) {\n    width: 100%;\n    margin-left: 0;\n  }\n`;\n\nexport const MenuBtn = styled.span<{ hidden?: boolean }>`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: none;\n  font-size: 2.7rem;\n  color: #374553;\n  cursor: pointer;\n\n  @media screen and (max-width: 769px) {\n    display: ${props => props.hidden ? 'none' : 'inline'};\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { slideOpen } from 'actions/slidebar';\nimport { ContentContainer, MenuBtn } from './Content.styled';\nimport { BiMenu } from 'react-icons/bi';\n\nconst Content: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const openSlideMenu = () => {\n    dispatch(slideOpen());\n  };\n\n  return (\n    <ContentContainer>\n      <MenuBtn>\n        <BiMenu onClick={openSlideMenu} />\n      </MenuBtn>\n      {children}\n    </ContentContainer>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Sidebar from 'components/another/Sidebar/Sidebar';\nimport Home from 'pages/Home';\nimport Button from 'pages/Button';\nimport Input from 'pages/Input';\nimport Checkbox from 'pages/Checkbox';\nimport DecoHr from 'pages/DecoHr';\nimport Header from 'pages/Header';\nimport Hr from 'pages/Hr';\nimport Icon from 'pages/Icon';\nimport LinkButton from 'pages/LinkButton';\nimport Underline from 'pages/Underline';\nimport Subtitle from 'pages/Subtitle';\nimport Dropdown from 'pages/Dropdown';\nimport Card from 'pages/Card';\nimport EventInfoCard from 'pages/EventInfoCard';\nimport StepCard from 'pages/StepCard';\nimport NavigationBar from 'pages/NavigationBar';\nimport Footer from 'pages/Footer';\nimport HambergTab from 'pages/HambergTab';\nimport Slider from 'pages/Slider';\nimport Nstep from 'pages/Nstep';\nimport Banner from 'pages/Banner';\nimport Modal from 'pages/Modal';\nimport Content from 'components/another/Content/Content';\n\nconst AppRouter: React.FC = () => (\n  <Router basename=\"/susirecipe-design-system\">\n    <Sidebar />\n    <Content>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"/atoms/button\">\n          <Button />\n        </Route>\n        <Route path=\"/atoms/input\">\n          <Input />\n        </Route>\n        <Route path=\"/atoms/checkbox\">\n          <Checkbox />\n        </Route>\n        <Route path=\"/atoms/deco-hr\">\n          <DecoHr />\n        </Route>\n        <Route path=\"/atoms/header\">\n          <Header />\n        </Route>\n        <Route path=\"/atoms/hr\">\n          <Hr />\n        </Route>\n        <Route path=\"/atoms/icon\">\n          <Icon />\n        </Route>\n        <Route path=\"/atoms/link-button\">\n          <LinkButton />\n        </Route>\n        <Route path=\"/atoms/underline\">\n          <Underline />\n        </Route>\n\n        <Route path=\"/molecules/subtitle\">\n          <Subtitle />\n        </Route>\n        <Route path=\"/molecules/dropdown\">\n          <Dropdown />\n        </Route>\n        <Route path=\"/molecules/card\">\n          <Card />\n        </Route>\n        <Route path=\"/molecules/event-info-card\">\n          <EventInfoCard />\n        </Route>\n        <Route path=\"/molecules/step-card\">\n          <StepCard />\n        </Route>\n\n        <Route path=\"/organisms/navigation-bar\">\n          <NavigationBar />\n        </Route>\n        <Route path=\"/organisms/footer\">\n          <Footer />\n        </Route>\n        <Route path=\"/organisms/hamberg-tab\">\n          <HambergTab />\n        </Route>\n        <Route path=\"/organisms/slider\">\n          <Slider />\n        </Route>\n        <Route path=\"/organisms/n-step\">\n          <Nstep />\n        </Route>\n        <Route path=\"/organisms/banner\">\n          <Banner />\n        </Route>\n        <Route path=\"/organisms/modal\">\n          <Modal />\n        </Route>\n      </Switch>\n    </Content>\n  </Router>\n);\n\nexport default AppRouter;\n","import { createStore, combineReducers } from 'redux';\nimport { slideReducer } from 'reducers/slidebar';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  slidebar: slideReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { SLIDE_OPEN, SLIDE_CLOSE, SlideAction } from 'actions/slidebar';\n\nconst initialState: boolean = false;\n\nexport const slideReducer = (state = initialState, action: SlideAction): boolean => {\n  switch (action.type) {\n    case SLIDE_OPEN:\n      return true;\n    case SLIDE_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport AppRouter from 'Router';\nimport { Provider } from 'react-redux';\nimport store from 'common/store';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}